       PROCESS NODLL,NODYNAM,TEST(NOSEP),NOCICS,NOSQL,PGMN(LU)
      *+---------------------------------------------------------------+
      *| Thcipdb0                                                      |
      *| PRODUCT: IBM DEVELOPER FOR Z/OS                               |
      *| COMPONENT: IBM Z/OS AUTOMATED UNIT TESTING FRAMEWORK (ZUNIT)  |
      *|   FOR ENTERPRISE COBOL AND PL/I                               |
      *| PROGRAM: ENTERPRISE COBOL ZUNIT TEST CASE FOR DYNAMIC RUNNER  |
      *| DATE GENERATED: 11/01/2021 15:25                              |
      *| ID: ee5b957f-44bb-4a99-9fc3-0202cfcf7a1a                      |
      *+---------------------------------------------------------------+
      *+---------------------------------------------------------------+
      *| TEST_TEST1                                                    |
      *|     THIS PROGRAM IS FOR TEST TEST1                            |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'TEST_TEST1'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 PROGRAM-NAME   PIC X(8)  VALUE 'HCIPDB01'.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM TEST CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 ASSERT-ST.
         03 ASSERT-RC PIC 9(9) BINARY VALUE 4.
         03 ASSERT-TEXT PIC 9(4) BINARY VALUE 0.
       01 AZ-TEST-NAME-LEN       PIC S9(9) COMP-5.
       01 AZ-RC-WORK             PIC S9(4) USAGE BINARY.
       1 AZ-TEST-EXPECTED-DATA-VALUE.
          3 AZU00000000.
            5 PIC X(6) DISPLAY VALUE '01IPAT'.
          3 AZU00000001.
            5 PIC X(10) DISPLAY VALUE '9627811234'.
          3 AZU00000002.
            5 PIC X(5) DISPLAY VALUE 'Ralph'.
            5 PIC X(5) DISPLAY VALUE SPACES.
          3 AZU00000003.
            5 PIC X(8) DISPLAY VALUE 'DAlmeida'.
            5 PIC X(12) DISPLAY VALUE SPACES.
          3 AZU00000004.
            5 PIC X(10) DISPLAY VALUE '1980-07-11'.
          3 AZU00000005.
            5 PIC X(14) DISPLAY VALUE '34 Main Street'.
            5 PIC X(6) DISPLAY VALUE SPACES.
          3 AZU00000006.
            5 PIC X(7) DISPLAY VALUE 'Toronto'.
            5 PIC X(13) DISPLAY VALUE SPACES.
          3 AZU00000007.
            5 PIC X(7) DISPLAY VALUE 'M5H 1T1'.
            5 PIC X(3) DISPLAY VALUE SPACES.
          3 AZU00000008.
            5 PIC X(12) DISPLAY VALUE '077-123-9987'.
            5 PIC X(8) DISPLAY VALUE SPACES.
          3 AZU00000009.
            5 PIC X(14) DISPLAY VALUE 'RalphD@ibm.com'.
            5 PIC X(36) DISPLAY VALUE SPACES.
          3 AZU0000000A.
            5 PIC X(6) DISPLAY VALUE 'ralphd'.
            5 PIC X(4) DISPLAY VALUE SPACES.
       01 AZ-COMPARE.
         03 AZ-COMPARE-ITEM-NAME-PTR  POINTER.
         03 AZ-COMPARE-ITEM-NAME-LEN  PIC S9(9) COMP-5.
         03 AZ-COMPARE-ITEM-VALUE-PTR POINTER.
         03 AZ-COMPARE-ITEM-VALUE-LEN PIC S9(9) COMP-5.
         03 AZ-COMPARE-ITEM-EXP-VALUE-PTR POINTER.
         03 AZ-COMPARE-ITEM-EXP-VALUE-LEN PIC S9(9) COMP-5.
       LOCAL-STORAGE SECTION.
       1 AZ-COMPARE-ITEM-NAMES.
         3 AZU0000000B.
            5 PIC X(20) DISPLAY VALUE 'CA-REQUEST-ID OF DFH'.
            5 PIC X(8) DISPLAY VALUE 'COMMAREA'.
         3 AZU0000000D.
            5 PIC X(20) DISPLAY VALUE 'CA-RETURN-CODE OF DF'.
            5 PIC X(9) DISPLAY VALUE 'HCOMMAREA'.
         3 AZU0000000F.
            5 PIC X(20) DISPLAY VALUE 'CA-PATIENT-ID OF DFH'.
            5 PIC X(8) DISPLAY VALUE 'COMMAREA'.
         3 AZU00000011.
            5 PIC X(20) DISPLAY VALUE 'CA-INS-CARD-NUM OF C'.
            5 PIC X(20) DISPLAY VALUE 'A-PATIENT-REQUEST OF'.
            5 PIC X(12) DISPLAY VALUE ' DFHCOMMAREA'.
         3 AZU00000013.
            5 PIC X(20) DISPLAY VALUE 'CA-FIRST-NAME OF CA-'.
            5 PIC X(20) DISPLAY VALUE 'PATIENT-REQUEST OF D'.
            5 PIC X(10) DISPLAY VALUE 'FHCOMMAREA'.
         3 AZU00000015.
            5 PIC X(20) DISPLAY VALUE 'CA-LAST-NAME OF CA-P'.
            5 PIC X(20) DISPLAY VALUE 'ATIENT-REQUEST OF DF'.
            5 PIC X(9) DISPLAY VALUE 'HCOMMAREA'.
         3 AZU00000017.
            5 PIC X(20) DISPLAY VALUE 'CA-DOB OF CA-PATIENT'.
            5 PIC X(20) DISPLAY VALUE '-REQUEST OF DFHCOMMA'.
            5 PIC X(3) DISPLAY VALUE 'REA'.
         3 AZU00000019.
            5 PIC X(20) DISPLAY VALUE 'CA-ADDRESS OF CA-PAT'.
            5 PIC X(20) DISPLAY VALUE 'IENT-REQUEST OF DFHC'.
            5 PIC X(7) DISPLAY VALUE 'OMMAREA'.
         3 AZU0000001B.
            5 PIC X(20) DISPLAY VALUE 'CA-CITY OF CA-PATIEN'.
            5 PIC X(20) DISPLAY VALUE 'T-REQUEST OF DFHCOMM'.
            5 PIC X(4) DISPLAY VALUE 'AREA'.
         3 AZU0000001D.
            5 PIC X(20) DISPLAY VALUE 'CA-POSTCODE OF CA-PA'.
            5 PIC X(20) DISPLAY VALUE 'TIENT-REQUEST OF DFH'.
            5 PIC X(8) DISPLAY VALUE 'COMMAREA'.
         3 AZU0000001F.
            5 PIC X(20) DISPLAY VALUE 'CA-PHONE-MOBILE OF C'.
            5 PIC X(20) DISPLAY VALUE 'A-PATIENT-REQUEST OF'.
            5 PIC X(12) DISPLAY VALUE ' DFHCOMMAREA'.
         3 AZU00000021.
            5 PIC X(20) DISPLAY VALUE 'CA-EMAIL-ADDRESS OF '.
            5 PIC X(20) DISPLAY VALUE 'CA-PATIENT-REQUEST O'.
            5 PIC X(13) DISPLAY VALUE 'F DFHCOMMAREA'.
         3 AZU00000023.
            5 PIC X(20) DISPLAY VALUE 'CA-USERID OF CA-PATI'.
            5 PIC X(20) DISPLAY VALUE 'ENT-REQUEST OF DFHCO'.
            5 PIC X(6) DISPLAY VALUE 'MMAREA'.
       1 AZ-COMPARE-WORK-ITEMS.
          3 AZU0000000C PIC X(6) OCCURS 2.
          3 AZU0000000E PIC 9(2) OCCURS 2.
          3 AZU00000010 PIC 9(10) OCCURS 2.
          3 AZU00000012 PIC X(10) OCCURS 2.
          3 AZU00000014 PIC X(10) OCCURS 2.
          3 AZU00000016 PIC X(20) OCCURS 2.
          3 AZU00000018 PIC X(10) OCCURS 2.
          3 AZU0000001A PIC X(20) OCCURS 2.
          3 AZU0000001C PIC X(20) OCCURS 2.
          3 AZU0000001E PIC X(10) OCCURS 2.
          3 AZU00000020 PIC X(20) OCCURS 2.
          3 AZU00000022 PIC X(50) OCCURS 2.
          3 AZU00000024 PIC X(10) OCCURS 2.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-ARG-LIST.
         03 ARG-LENGTH PIC 9(4) COMP-4.
         03 ARG-DATA PIC X(256).
       01 AZ-COMPARE-ITEM-NAME      PIC X(254).
       01 AZ-COMPARE-ITEM-VALUE     PIC X(254).
       01 AZ-COMPARE-ITEM-EXP-VALUE PIC X(254).
      *  *** DFHEIBLK : ZUT0000003F
       1 ZUT0000003F.
      *    *** EIBTIME : ZUT00000040
         2 ZUT00000040 PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT00000041
         2 ZUT00000041 PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT00000042
         2 ZUT00000042 PICTURE X(4).
      *    *** EIBTASKN : ZUT00000043
         2 ZUT00000043 PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT00000044
         2 ZUT00000044 PICTURE X(4).
      *    *** DFHEIGDI : ZUT00000045
         2 ZUT00000045 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000046
         2 ZUT00000046 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000047
         2 ZUT00000047 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000048
         2 ZUT00000048 PICTURE X(1).
      *    *** EIBFN : ZUT00000049
         2 ZUT00000049 PICTURE X(2).
      *    *** EIBRCODE : ZUT0000004A
         2 ZUT0000004A PICTURE X(6).
      *    *** EIBDS : ZUT0000004B
         2 ZUT0000004B PICTURE X(8).
      *    *** EIBREQID : ZUT0000004C
         2 ZUT0000004C PICTURE X(8).
      *    *** EIBRSRCE : ZUT0000004D
         2 ZUT0000004D PICTURE X(8).
      *    *** EIBSYNC : ZUT0000004E
         2 ZUT0000004E PICTURE X.
      *    *** EIBFREE : ZUT0000004F
         2 ZUT0000004F PICTURE X.
      *    *** EIBRECV : ZUT00000050
         2 ZUT00000050 PICTURE X.
      *    *** EIBSEND : ZUT00000051
         2 ZUT00000051 PICTURE X.
      *    *** EIBATT : ZUT00000052
         2 ZUT00000052 PICTURE X.
      *    *** EIBEOC : ZUT00000053
         2 ZUT00000053 PICTURE X.
      *    *** EIBFMH : ZUT00000054
         2 ZUT00000054 PICTURE X.
      *    *** EIBCOMPL : ZUT00000055
         2 ZUT00000055 PICTURE X(1).
      *    *** EIBSIG : ZUT00000056
         2 ZUT00000056 PICTURE X(1).
      *    *** EIBCONF : ZUT00000057
         2 ZUT00000057 PICTURE X(1).
      *    *** EIBERR : ZUT00000058
         2 ZUT00000058 PICTURE X(1).
      *    *** EIBERRCD : ZUT00000059
         2 ZUT00000059 PICTURE X(4).
      *    *** EIBSYNRB : ZUT0000005A
         2 ZUT0000005A PICTURE X.
      *    *** EIBNODAT : ZUT0000005B
         2 ZUT0000005B PICTURE X.
      *    *** EIBRESP : ZUT0000005C
         2 ZUT0000005C PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT0000005D
         2 ZUT0000005D PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT0000005E
         2 ZUT0000005E PICTURE X(1).
      *  *** DFHCOMMAREA : ZUT0000005F
       1 ZUT0000005F.
      *    *** CA-REQUEST-ID : ZUT00000060
         3 ZUT00000060 PIC X(6).
      *    *** CA-RETURN-CODE : ZUT00000061
         3 ZUT00000061 PIC 9(2).
      *    *** CA-PATIENT-ID : ZUT00000062
         3 ZUT00000062 PIC 9(10).
      *    *** CA-REQUEST-SPECIFIC : ZUT00000063
         3 ZUT00000063 PIC X(32482).
      *    *** CA-PATIENT-REQUEST : ZUT00000064
         3 ZUT00000064 REDEFINES ZUT00000063.
      *    *** CA-INS-CARD-NUM : ZUT00000065
         5 ZUT00000065 PIC X(10).
      *    *** CA-FIRST-NAME : ZUT00000066
         5 ZUT00000066 PIC X(10).
      *    *** CA-LAST-NAME : ZUT00000067
         5 ZUT00000067 PIC X(20).
      *    *** CA-DOB : ZUT00000068
         5 ZUT00000068 PIC X(10).
      *    *** CA-ADDRESS : ZUT00000069
         5 ZUT00000069 PIC X(20).
      *    *** CA-CITY : ZUT0000006A
         5 ZUT0000006A PIC X(20).
      *    *** CA-POSTCODE : ZUT0000006B
         5 ZUT0000006B PIC X(10).
      *    *** CA-PHONE-MOBILE : ZUT0000006C
         5 ZUT0000006C PIC X(20).
      *    *** CA-EMAIL-ADDRESS : ZUT0000006D
         5 ZUT0000006D PIC X(50).
      *    *** CA-USERID : ZUT0000006E
         5 ZUT0000006E PIC X(10).
      *    *** CA-ADDITIONAL-DATA : ZUT0000006F
         5 ZUT0000006F PIC X(32302).
      *    *** CA-PATIENT-USER-REQUEST : ZUT00000070
         3 ZUT00000070 REDEFINES ZUT00000063.
      *    *** CA-USERNAME : ZUT00000071
         5 ZUT00000071 PIC X(10).
      *    *** CA-USERPASSWORD : ZUT00000072
         5 ZUT00000072 PIC X(14).
      *    *** CA-ADDITIONAL-DATA : ZUT00000073
         5 ZUT00000073 PIC X(32458).
      *    *** CA-MEDICATION-REQUEST : ZUT00000074
         3 ZUT00000074 REDEFINES ZUT00000063.
      *    *** CA-DRUG-NAME : ZUT00000075
         5 ZUT00000075 PIC X(50).
      *    *** CA-STRENGTH : ZUT00000076
         5 ZUT00000076 PIC X(20).
      *    *** CA-AMOUNT : ZUT00000077
         5 ZUT00000077 PIC 9(03).
      *    *** CA-ROUTE : ZUT00000078
         5 ZUT00000078 PIC X(20).
      *    *** CA-FREQUENCY : ZUT00000079
         5 ZUT00000079 PIC X(20).
      *    *** CA-IDENTIFIER : ZUT0000007A
         5 ZUT0000007A PIC X(20).
      *    *** CA-BIOMED-TYPE : ZUT0000007B
         5 ZUT0000007B PIC X(2).
      *    *** CA-START-DATE : ZUT0000007C
         5 ZUT0000007C PIC X(10).
      *    *** CA-END-DATE : ZUT0000007D
         5 ZUT0000007D PIC X(10).
      *    *** CA-PRESCRIPTION-ID : ZUT0000007E
         5 ZUT0000007E PIC 9(10).
      *    *** CA-ADDITIONAL-DATA : ZUT0000007F
         5 ZUT0000007F PIC X(32317).
      *    *** CA-MEDITATION-REQUEST : ZUT00000080
         3 ZUT00000080 REDEFINES ZUT00000063.
      *    *** CA-MEDITATION-NAME : ZUT00000081
         5 ZUT00000081 PIC X(50).
      *    *** CA-MEDITATION-TYPE : ZUT00000082
         5 ZUT00000082 PIC X(20).
      *    *** CA-RELIEF : ZUT00000083
         5 ZUT00000083 PIC X(20).
      *    *** CA-POSTURE : ZUT00000084
         5 ZUT00000084 PIC X(20).
      *    *** CA-HOW-OFTEN : ZUT00000085
         5 ZUT00000085 PIC X(20).
      *    *** CA-ADDITIONAL-DATA : ZUT00000086
         5 ZUT00000086 PIC X(32352).
      *    *** CA-THRESHOLD-REQUEST : ZUT00000087
         3 ZUT00000087 REDEFINES ZUT00000063.
      *    *** CA-HR-THRESHOLD : ZUT00000088
         5 ZUT00000088 PIC X(10).
      *    *** CA-BP-THRESHOLD : ZUT00000089
         5 ZUT00000089 PIC X(10).
      *    *** CA-MS-THRESHOLD : ZUT0000008A
         5 ZUT0000008A PIC X(10).
      *    *** CA-ADDITIONAL-DATA : ZUT0000008B
         5 ZUT0000008B PIC X(32452).
      *    *** CA-VISIT-REQUEST : ZUT0000008C
         3 ZUT0000008C REDEFINES ZUT00000063.
      *    *** CA-VISIT-DATE : ZUT0000008D
         5 ZUT0000008D PIC X(10).
      *    *** CA-VISIT-TIME : ZUT0000008E
         5 ZUT0000008E PIC X(10).
      *    *** CA-HEART-RATE : ZUT0000008F
         5 ZUT0000008F PIC X(10).
      *    *** CA-BLOOD-PRESSURE : ZUT00000090
         5 ZUT00000090 PIC X(10).
      *    *** CA-MENTAL-STATE : ZUT00000091
         5 ZUT00000091 PIC X(10).
      *    *** CA-ADDITIONAL-DATA : ZUT00000092
         5 ZUT00000092 PIC X(32432).
       PROCEDURE DIVISION USING AZ-TEST
           ZUT0000003F ZUT0000005F.
      * START
           DISPLAY 'TEST_TEST1 STARTED...'
           MOVE 0 TO AZ-TEST-NAME-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * INITIALIZE PARAMETER
           PERFORM INITIALIZE-PARM
      * SET AREA ADDRESS TO POINTER
      * SET INPUT VALUE
           MOVE 0 TO RETURN-CODE.
      * CALL TEST PROGRAM
           DISPLAY 'CALL HCIPDB01'
           CALL PROGRAM-NAME
           USING ZUT0000003F ZUT0000005F
           .
      * EVALUATE OUTPUT VALUE
           MOVE 0 TO RETURN-CODE
           IF ZUT00000060 OF ZUT0000005F = AZU00000000 THEN
             CONTINUE
           ELSE
             MOVE ZUT00000060 OF ZUT0000005F TO AZU0000000C(1)
             MOVE AZU00000000 TO AZU0000000C(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000000B
             MOVE LENGTH OF AZU0000000B TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000000C(1)
             MOVE 6 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000000C(2)
             MOVE 6 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF (ZUT00000061 OF ZUT0000005F IS NUMERIC)
               AND (ZUT00000061 OF ZUT0000005F = 0) THEN
             CONTINUE
           ELSE
             MOVE ZUT00000061 OF ZUT0000005F TO AZU0000000E(1)
             MOVE 0 TO AZU0000000E(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000000D
             MOVE LENGTH OF AZU0000000D TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000000E(1)
             MOVE 2 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000000E(2)
             MOVE 2 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF (ZUT00000062 OF ZUT0000005F IS NUMERIC)
               AND (ZUT00000062 OF ZUT0000005F = 1) THEN
             CONTINUE
           ELSE
             MOVE ZUT00000062 OF ZUT0000005F TO AZU00000010(1)
             MOVE 1 TO AZU00000010(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000000F
             MOVE LENGTH OF AZU0000000F TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000010(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000010(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT00000065 OF ZUT00000064 OF ZUT0000005F = AZU00000001
           THEN
             CONTINUE
           ELSE
             MOVE ZUT00000065 OF ZUT00000064 OF ZUT0000005F TO
           AZU00000012(1)
             MOVE AZU00000001 TO AZU00000012(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000011
             MOVE LENGTH OF AZU00000011 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000012(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000012(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT00000066 OF ZUT00000064 OF ZUT0000005F = AZU00000002
           THEN
             CONTINUE
           ELSE
             MOVE ZUT00000066 OF ZUT00000064 OF ZUT0000005F TO
           AZU00000014(1)
             MOVE AZU00000002 TO AZU00000014(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000013
             MOVE LENGTH OF AZU00000013 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000014(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000014(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT00000067 OF ZUT00000064 OF ZUT0000005F = AZU00000003
           THEN
             CONTINUE
           ELSE
             MOVE ZUT00000067 OF ZUT00000064 OF ZUT0000005F TO
           AZU00000016(1)
             MOVE AZU00000003 TO AZU00000016(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000015
             MOVE LENGTH OF AZU00000015 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000016(1)
             MOVE 20 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000016(2)
             MOVE 20 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT00000068 OF ZUT00000064 OF ZUT0000005F = AZU00000004
           THEN
             CONTINUE
           ELSE
             MOVE ZUT00000068 OF ZUT00000064 OF ZUT0000005F TO
           AZU00000018(1)
             MOVE AZU00000004 TO AZU00000018(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000017
             MOVE LENGTH OF AZU00000017 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000018(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000018(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT00000069 OF ZUT00000064 OF ZUT0000005F = AZU00000005
           THEN
             CONTINUE
           ELSE
             MOVE ZUT00000069 OF ZUT00000064 OF ZUT0000005F TO
           AZU0000001A(1)
             MOVE AZU00000005 TO AZU0000001A(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000019
             MOVE LENGTH OF AZU00000019 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000001A(1)
             MOVE 20 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000001A(2)
             MOVE 20 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT0000006A OF ZUT00000064 OF ZUT0000005F = AZU00000006
           THEN
             CONTINUE
           ELSE
             MOVE ZUT0000006A OF ZUT00000064 OF ZUT0000005F TO
           AZU0000001C(1)
             MOVE AZU00000006 TO AZU0000001C(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000001B
             MOVE LENGTH OF AZU0000001B TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000001C(1)
             MOVE 20 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000001C(2)
             MOVE 20 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT0000006B OF ZUT00000064 OF ZUT0000005F = AZU00000007
           THEN
             CONTINUE
           ELSE
             MOVE ZUT0000006B OF ZUT00000064 OF ZUT0000005F TO
           AZU0000001E(1)
             MOVE AZU00000007 TO AZU0000001E(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000001D
             MOVE LENGTH OF AZU0000001D TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000001E(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000001E(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT0000006C OF ZUT00000064 OF ZUT0000005F = AZU00000008
           THEN
             CONTINUE
           ELSE
             MOVE ZUT0000006C OF ZUT00000064 OF ZUT0000005F TO
           AZU00000020(1)
             MOVE AZU00000008 TO AZU00000020(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000001F
             MOVE LENGTH OF AZU0000001F TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000020(1)
             MOVE 20 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000020(2)
             MOVE 20 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT0000006D OF ZUT00000064 OF ZUT0000005F = AZU00000009
           THEN
             CONTINUE
           ELSE
             MOVE ZUT0000006D OF ZUT00000064 OF ZUT0000005F TO
           AZU00000022(1)
             MOVE AZU00000009 TO AZU00000022(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000021
             MOVE LENGTH OF AZU00000021 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000022(1)
             MOVE 50 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000022(2)
             MOVE 50 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT0000006E OF ZUT00000064 OF ZUT0000005F = AZU0000000A
           THEN
             CONTINUE
           ELSE
             MOVE ZUT0000006E OF ZUT00000064 OF ZUT0000005F TO
           AZU00000024(1)
             MOVE AZU0000000A TO AZU00000024(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000023
             MOVE LENGTH OF AZU00000023 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000024(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000024(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
      * END
           DISPLAY 'TEST_TEST1 SUCCESSFUL.'
           GOBACK.
       INITIALIZE-PARM.
           EXIT.
       THROW-ASSERTION.
           MOVE 1 TO MESSAGE-LEN OF BZ-ASSERT
           STRING 'COMPARE FAILED IN PROCEDURE DIVISION.'
             DELIMITED BY SIZE INTO MESSAGE-TXT OF BZ-ASSERT
             WITH POINTER MESSAGE-LEN OF BZ-ASSERT
           END-STRING
           SUBTRACT 1 FROM MESSAGE-LEN OF BZ-ASSERT
           SET ADDRESS OF AZ-COMPARE-ITEM-NAME TO
           AZ-COMPARE-ITEM-NAME-PTR.
           SET ADDRESS OF AZ-COMPARE-ITEM-VALUE TO
           AZ-COMPARE-ITEM-VALUE-PTR.
           SET ADDRESS OF AZ-COMPARE-ITEM-EXP-VALUE TO
           AZ-COMPARE-ITEM-EXP-VALUE-PTR.
           DISPLAY '****************************************************
      -    '****************************'
           DISPLAY 'AZU2001W THE TEST "' AZ-TEST(1:AZ-TEST-NAME-LEN) '"
      -    'FAILED DUE TO AN ASSERTION.'
           DISPLAY 'AZU1101I ' MESSAGE-TXT OF BZ-ASSERT(1:MESSAGE-LEN
           OF BZ-ASSERT)
           DISPLAY ' DATA ITEM NAME : '
           AZ-COMPARE-ITEM-NAME(1:AZ-COMPARE-ITEM-NAME-LEN)
           DISPLAY '  VALUE         : '
           AZ-COMPARE-ITEM-VALUE(1:AZ-COMPARE-ITEM-VALUE-LEN)
           DISPLAY '  EXPECTED VALUE: '
           AZ-COMPARE-ITEM-EXP-VALUE(1:AZ-COMPARE-ITEM-EXP-VALUE-LEN)
           DISPLAY '****************************************************
      -    '****************************'
           CALL BZUASSRT USING BZ-P1 BZ-P2 BZ-P3 BZ-ASSERT
           MOVE 1 TO TRACE-LEN OF BZ-TRACE
           STRING 'ITEM NAME='
           AZ-COMPARE-ITEM-NAME(1:AZ-COMPARE-ITEM-NAME-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
           SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
           SET AZ-TRACE-PTR TO ADDRESS OF TRACE-TXT OF BZ-TRACE
           CALL BZUTRACE USING BZ-TRACE
           MOVE 1 TO TRACE-LEN OF BZ-TRACE
           STRING 'VALUE='
           AZ-COMPARE-ITEM-VALUE(1:AZ-COMPARE-ITEM-VALUE-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
           SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
           CALL BZUTRACE USING BZ-TRACE
           MOVE 1 TO TRACE-LEN OF BZ-TRACE
           STRING 'EXPECTED VALUE='
           AZ-COMPARE-ITEM-EXP-VALUE(1:AZ-COMPARE-ITEM-EXP-VALUE-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
           SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
           CALL BZUTRACE USING BZ-TRACE
           EXIT.
       END PROGRAM TEST_TEST1.
      *+---------------------------------------------------------------+
      *| TEST_SQL922                                                   |
      *|     THIS PROGRAM IS FOR TEST SQL922                           |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'TEST_SQL922'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 PROGRAM-NAME   PIC X(8)  VALUE 'HCIPDB01'.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM TEST CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 ASSERT-ST.
         03 ASSERT-RC PIC 9(9) BINARY VALUE 4.
         03 ASSERT-TEXT PIC 9(4) BINARY VALUE 0.
       01 AZ-TEST-NAME-LEN       PIC S9(9) COMP-5.
       01 AZ-RC-WORK             PIC S9(4) USAGE BINARY.
       01 AZ-COMPARE.
         03 AZ-COMPARE-ITEM-NAME-PTR  POINTER.
         03 AZ-COMPARE-ITEM-NAME-LEN  PIC S9(9) COMP-5.
         03 AZ-COMPARE-ITEM-VALUE-PTR POINTER.
         03 AZ-COMPARE-ITEM-VALUE-LEN PIC S9(9) COMP-5.
         03 AZ-COMPARE-ITEM-EXP-VALUE-PTR POINTER.
         03 AZ-COMPARE-ITEM-EXP-VALUE-LEN PIC S9(9) COMP-5.
       LOCAL-STORAGE SECTION.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-ARG-LIST.
         03 ARG-LENGTH PIC 9(4) COMP-4.
         03 ARG-DATA PIC X(256).
       01 AZ-COMPARE-ITEM-NAME      PIC X(254).
       01 AZ-COMPARE-ITEM-VALUE     PIC X(254).
       01 AZ-COMPARE-ITEM-EXP-VALUE PIC X(254).
      *  *** DFHEIBLK : ZUT0000003F
       1 ZUT0000003F.
      *    *** EIBTIME : ZUT00000040
         2 ZUT00000040 PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT00000041
         2 ZUT00000041 PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT00000042
         2 ZUT00000042 PICTURE X(4).
      *    *** EIBTASKN : ZUT00000043
         2 ZUT00000043 PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT00000044
         2 ZUT00000044 PICTURE X(4).
      *    *** DFHEIGDI : ZUT00000045
         2 ZUT00000045 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000046
         2 ZUT00000046 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000047
         2 ZUT00000047 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000048
         2 ZUT00000048 PICTURE X(1).
      *    *** EIBFN : ZUT00000049
         2 ZUT00000049 PICTURE X(2).
      *    *** EIBRCODE : ZUT0000004A
         2 ZUT0000004A PICTURE X(6).
      *    *** EIBDS : ZUT0000004B
         2 ZUT0000004B PICTURE X(8).
      *    *** EIBREQID : ZUT0000004C
         2 ZUT0000004C PICTURE X(8).
      *    *** EIBRSRCE : ZUT0000004D
         2 ZUT0000004D PICTURE X(8).
      *    *** EIBSYNC : ZUT0000004E
         2 ZUT0000004E PICTURE X.
      *    *** EIBFREE : ZUT0000004F
         2 ZUT0000004F PICTURE X.
      *    *** EIBRECV : ZUT00000050
         2 ZUT00000050 PICTURE X.
      *    *** EIBSEND : ZUT00000051
         2 ZUT00000051 PICTURE X.
      *    *** EIBATT : ZUT00000052
         2 ZUT00000052 PICTURE X.
      *    *** EIBEOC : ZUT00000053
         2 ZUT00000053 PICTURE X.
      *    *** EIBFMH : ZUT00000054
         2 ZUT00000054 PICTURE X.
      *    *** EIBCOMPL : ZUT00000055
         2 ZUT00000055 PICTURE X(1).
      *    *** EIBSIG : ZUT00000056
         2 ZUT00000056 PICTURE X(1).
      *    *** EIBCONF : ZUT00000057
         2 ZUT00000057 PICTURE X(1).
      *    *** EIBERR : ZUT00000058
         2 ZUT00000058 PICTURE X(1).
      *    *** EIBERRCD : ZUT00000059
         2 ZUT00000059 PICTURE X(4).
      *    *** EIBSYNRB : ZUT0000005A
         2 ZUT0000005A PICTURE X.
      *    *** EIBNODAT : ZUT0000005B
         2 ZUT0000005B PICTURE X.
      *    *** EIBRESP : ZUT0000005C
         2 ZUT0000005C PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT0000005D
         2 ZUT0000005D PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT0000005E
         2 ZUT0000005E PICTURE X(1).
      *  *** DFHCOMMAREA : ZUT0000005F
       1 ZUT0000005F.
      *    *** CA-REQUEST-ID : ZUT00000060
         3 ZUT00000060 PIC X(6).
      *    *** CA-RETURN-CODE : ZUT00000061
         3 ZUT00000061 PIC 9(2).
      *    *** CA-PATIENT-ID : ZUT00000062
         3 ZUT00000062 PIC 9(10).
      *    *** CA-REQUEST-SPECIFIC : ZUT00000063
         3 ZUT00000063 PIC X(32482).
      *    *** CA-PATIENT-REQUEST : ZUT00000064
         3 ZUT00000064 REDEFINES ZUT00000063.
      *    *** CA-INS-CARD-NUM : ZUT00000065
         5 ZUT00000065 PIC X(10).
      *    *** CA-FIRST-NAME : ZUT00000066
         5 ZUT00000066 PIC X(10).
      *    *** CA-LAST-NAME : ZUT00000067
         5 ZUT00000067 PIC X(20).
      *    *** CA-DOB : ZUT00000068
         5 ZUT00000068 PIC X(10).
      *    *** CA-ADDRESS : ZUT00000069
         5 ZUT00000069 PIC X(20).
      *    *** CA-CITY : ZUT0000006A
         5 ZUT0000006A PIC X(20).
      *    *** CA-POSTCODE : ZUT0000006B
         5 ZUT0000006B PIC X(10).
      *    *** CA-PHONE-MOBILE : ZUT0000006C
         5 ZUT0000006C PIC X(20).
      *    *** CA-EMAIL-ADDRESS : ZUT0000006D
         5 ZUT0000006D PIC X(50).
      *    *** CA-USERID : ZUT0000006E
         5 ZUT0000006E PIC X(10).
      *    *** CA-ADDITIONAL-DATA : ZUT0000006F
         5 ZUT0000006F PIC X(32302).
      *    *** CA-PATIENT-USER-REQUEST : ZUT00000070
         3 ZUT00000070 REDEFINES ZUT00000063.
      *    *** CA-USERNAME : ZUT00000071
         5 ZUT00000071 PIC X(10).
      *    *** CA-USERPASSWORD : ZUT00000072
         5 ZUT00000072 PIC X(14).
      *    *** CA-ADDITIONAL-DATA : ZUT00000073
         5 ZUT00000073 PIC X(32458).
      *    *** CA-MEDICATION-REQUEST : ZUT00000074
         3 ZUT00000074 REDEFINES ZUT00000063.
      *    *** CA-DRUG-NAME : ZUT00000075
         5 ZUT00000075 PIC X(50).
      *    *** CA-STRENGTH : ZUT00000076
         5 ZUT00000076 PIC X(20).
      *    *** CA-AMOUNT : ZUT00000077
         5 ZUT00000077 PIC 9(03).
      *    *** CA-ROUTE : ZUT00000078
         5 ZUT00000078 PIC X(20).
      *    *** CA-FREQUENCY : ZUT00000079
         5 ZUT00000079 PIC X(20).
      *    *** CA-IDENTIFIER : ZUT0000007A
         5 ZUT0000007A PIC X(20).
      *    *** CA-BIOMED-TYPE : ZUT0000007B
         5 ZUT0000007B PIC X(2).
      *    *** CA-START-DATE : ZUT0000007C
         5 ZUT0000007C PIC X(10).
      *    *** CA-END-DATE : ZUT0000007D
         5 ZUT0000007D PIC X(10).
      *    *** CA-PRESCRIPTION-ID : ZUT0000007E
         5 ZUT0000007E PIC 9(10).
      *    *** CA-ADDITIONAL-DATA : ZUT0000007F
         5 ZUT0000007F PIC X(32317).
      *    *** CA-MEDITATION-REQUEST : ZUT00000080
         3 ZUT00000080 REDEFINES ZUT00000063.
      *    *** CA-MEDITATION-NAME : ZUT00000081
         5 ZUT00000081 PIC X(50).
      *    *** CA-MEDITATION-TYPE : ZUT00000082
         5 ZUT00000082 PIC X(20).
      *    *** CA-RELIEF : ZUT00000083
         5 ZUT00000083 PIC X(20).
      *    *** CA-POSTURE : ZUT00000084
         5 ZUT00000084 PIC X(20).
      *    *** CA-HOW-OFTEN : ZUT00000085
         5 ZUT00000085 PIC X(20).
      *    *** CA-ADDITIONAL-DATA : ZUT00000086
         5 ZUT00000086 PIC X(32352).
      *    *** CA-THRESHOLD-REQUEST : ZUT00000087
         3 ZUT00000087 REDEFINES ZUT00000063.
      *    *** CA-HR-THRESHOLD : ZUT00000088
         5 ZUT00000088 PIC X(10).
      *    *** CA-BP-THRESHOLD : ZUT00000089
         5 ZUT00000089 PIC X(10).
      *    *** CA-MS-THRESHOLD : ZUT0000008A
         5 ZUT0000008A PIC X(10).
      *    *** CA-ADDITIONAL-DATA : ZUT0000008B
         5 ZUT0000008B PIC X(32452).
      *    *** CA-VISIT-REQUEST : ZUT0000008C
         3 ZUT0000008C REDEFINES ZUT00000063.
      *    *** CA-VISIT-DATE : ZUT0000008D
         5 ZUT0000008D PIC X(10).
      *    *** CA-VISIT-TIME : ZUT0000008E
         5 ZUT0000008E PIC X(10).
      *    *** CA-HEART-RATE : ZUT0000008F
         5 ZUT0000008F PIC X(10).
      *    *** CA-BLOOD-PRESSURE : ZUT00000090
         5 ZUT00000090 PIC X(10).
      *    *** CA-MENTAL-STATE : ZUT00000091
         5 ZUT00000091 PIC X(10).
      *    *** CA-ADDITIONAL-DATA : ZUT00000092
         5 ZUT00000092 PIC X(32432).
       PROCEDURE DIVISION USING AZ-TEST
           ZUT0000003F ZUT0000005F.
      * START
           DISPLAY 'TEST_SQL922 STARTED...'
           MOVE 0 TO AZ-TEST-NAME-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * INITIALIZE PARAMETER
           PERFORM INITIALIZE-PARM
      * SET AREA ADDRESS TO POINTER
      * SET INPUT VALUE
           MOVE 0 TO RETURN-CODE.
      * CALL TEST PROGRAM
           DISPLAY 'CALL HCIPDB01'
           CALL PROGRAM-NAME
           USING ZUT0000003F ZUT0000005F
           .
      * EVALUATE OUTPUT VALUE
           MOVE 0 TO RETURN-CODE
      * END
           DISPLAY 'TEST_SQL922 SUCCESSFUL.'
           GOBACK.
       INITIALIZE-PARM.
           EXIT.
       THROW-ASSERTION.
           MOVE 1 TO MESSAGE-LEN OF BZ-ASSERT
           STRING 'COMPARE FAILED IN PROCEDURE DIVISION.'
             DELIMITED BY SIZE INTO MESSAGE-TXT OF BZ-ASSERT
             WITH POINTER MESSAGE-LEN OF BZ-ASSERT
           END-STRING
           SUBTRACT 1 FROM MESSAGE-LEN OF BZ-ASSERT
           SET ADDRESS OF AZ-COMPARE-ITEM-NAME TO
           AZ-COMPARE-ITEM-NAME-PTR.
           SET ADDRESS OF AZ-COMPARE-ITEM-VALUE TO
           AZ-COMPARE-ITEM-VALUE-PTR.
           SET ADDRESS OF AZ-COMPARE-ITEM-EXP-VALUE TO
           AZ-COMPARE-ITEM-EXP-VALUE-PTR.
           DISPLAY '****************************************************
      -    '****************************'
           DISPLAY 'AZU2001W THE TEST "' AZ-TEST(1:AZ-TEST-NAME-LEN) '"
      -    'FAILED DUE TO AN ASSERTION.'
           DISPLAY 'AZU1101I ' MESSAGE-TXT OF BZ-ASSERT(1:MESSAGE-LEN
           OF BZ-ASSERT)
           DISPLAY ' DATA ITEM NAME : '
           AZ-COMPARE-ITEM-NAME(1:AZ-COMPARE-ITEM-NAME-LEN)
           DISPLAY '  VALUE         : '
           AZ-COMPARE-ITEM-VALUE(1:AZ-COMPARE-ITEM-VALUE-LEN)
           DISPLAY '  EXPECTED VALUE: '
           AZ-COMPARE-ITEM-EXP-VALUE(1:AZ-COMPARE-ITEM-EXP-VALUE-LEN)
           DISPLAY '****************************************************
      -    '****************************'
           CALL BZUASSRT USING BZ-P1 BZ-P2 BZ-P3 BZ-ASSERT
           MOVE 1 TO TRACE-LEN OF BZ-TRACE
           STRING 'ITEM NAME='
           AZ-COMPARE-ITEM-NAME(1:AZ-COMPARE-ITEM-NAME-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
           SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
           SET AZ-TRACE-PTR TO ADDRESS OF TRACE-TXT OF BZ-TRACE
           CALL BZUTRACE USING BZ-TRACE
           MOVE 1 TO TRACE-LEN OF BZ-TRACE
           STRING 'VALUE='
           AZ-COMPARE-ITEM-VALUE(1:AZ-COMPARE-ITEM-VALUE-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
           SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
           CALL BZUTRACE USING BZ-TRACE
           MOVE 1 TO TRACE-LEN OF BZ-TRACE
           STRING 'EXPECTED VALUE='
           AZ-COMPARE-ITEM-EXP-VALUE(1:AZ-COMPARE-ITEM-EXP-VALUE-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
           SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
           CALL BZUTRACE USING BZ-TRACE
           EXIT.
       END PROGRAM TEST_SQL922.
      *+---------------------------------------------------------------+
      *| TEST_TEST4                                                    |
      *|     THIS PROGRAM IS FOR TEST TEST4                            |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'TEST_TEST4'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 PROGRAM-NAME   PIC X(8)  VALUE 'HCIPDB01'.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM TEST CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 ASSERT-ST.
         03 ASSERT-RC PIC 9(9) BINARY VALUE 4.
         03 ASSERT-TEXT PIC 9(4) BINARY VALUE 0.
       01 AZ-TEST-NAME-LEN       PIC S9(9) COMP-5.
       01 AZ-RC-WORK             PIC S9(4) USAGE BINARY.
       1 AZ-TEST-EXPECTED-DATA-VALUE.
          3 AZU00000025.
            5 PIC X(6) DISPLAY VALUE '01IPAT'.
          3 AZU00000026.
            5 PIC X(10) DISPLAY VALUE '1127811234'.
          3 AZU00000027.
            5 PIC X(4) DISPLAY VALUE 'John'.
            5 PIC X(6) DISPLAY VALUE SPACES.
          3 AZU00000028.
            5 PIC X(5) DISPLAY VALUE 'Smith'.
            5 PIC X(15) DISPLAY VALUE SPACES.
          3 AZU00000029.
            5 PIC X(10) DISPLAY VALUE '1965-09-30'.
          3 AZU0000002A.
            5 PIC X(14) DISPLAY VALUE '2 Smith Street'.
            5 PIC X(6) DISPLAY VALUE SPACES.
          3 AZU0000002B.
            5 PIC X(8) DISPLAY VALUE 'New York'.
            5 PIC X(12) DISPLAY VALUE SPACES.
          3 AZU0000002C.
            5 PIC X(5) DISPLAY VALUE '12345'.
            5 PIC X(5) DISPLAY VALUE SPACES.
          3 AZU0000002D.
            5 PIC X(12) DISPLAY VALUE '001-911-9113'.
            5 PIC X(8) DISPLAY VALUE SPACES.
          3 AZU0000002E.
            5 PIC X(19) DISPLAY VALUE 'JohnSmith@email.com'.
            5 PIC X(31) DISPLAY VALUE SPACES.
          3 AZU0000002F.
            5 PIC X(5) DISPLAY VALUE 'johns'.
            5 PIC X(5) DISPLAY VALUE SPACES.
          3 AZU00000030.
            5 PIC X(32302) DISPLAY VALUE SPACES.
       01 AZ-COMPARE.
         03 AZ-COMPARE-ITEM-NAME-PTR  POINTER.
         03 AZ-COMPARE-ITEM-NAME-LEN  PIC S9(9) COMP-5.
         03 AZ-COMPARE-ITEM-VALUE-PTR POINTER.
         03 AZ-COMPARE-ITEM-VALUE-LEN PIC S9(9) COMP-5.
         03 AZ-COMPARE-ITEM-EXP-VALUE-PTR POINTER.
         03 AZ-COMPARE-ITEM-EXP-VALUE-LEN PIC S9(9) COMP-5.
       LOCAL-STORAGE SECTION.
       1 AZ-COMPARE-ITEM-NAMES.
         3 AZU00000031.
            5 PIC X(20) DISPLAY VALUE 'CA-REQUEST-ID OF DFH'.
            5 PIC X(8) DISPLAY VALUE 'COMMAREA'.
         3 AZU00000033.
            5 PIC X(20) DISPLAY VALUE 'CA-RETURN-CODE OF DF'.
            5 PIC X(9) DISPLAY VALUE 'HCOMMAREA'.
         3 AZU00000035.
            5 PIC X(20) DISPLAY VALUE 'CA-PATIENT-ID OF DFH'.
            5 PIC X(8) DISPLAY VALUE 'COMMAREA'.
         3 AZU00000037.
            5 PIC X(20) DISPLAY VALUE 'CA-INS-CARD-NUM OF C'.
            5 PIC X(20) DISPLAY VALUE 'A-PATIENT-REQUEST OF'.
            5 PIC X(12) DISPLAY VALUE ' DFHCOMMAREA'.
         3 AZU00000039.
            5 PIC X(20) DISPLAY VALUE 'CA-FIRST-NAME OF CA-'.
            5 PIC X(20) DISPLAY VALUE 'PATIENT-REQUEST OF D'.
            5 PIC X(10) DISPLAY VALUE 'FHCOMMAREA'.
         3 AZU0000003B.
            5 PIC X(20) DISPLAY VALUE 'CA-LAST-NAME OF CA-P'.
            5 PIC X(20) DISPLAY VALUE 'ATIENT-REQUEST OF DF'.
            5 PIC X(9) DISPLAY VALUE 'HCOMMAREA'.
         3 AZU0000003D.
            5 PIC X(20) DISPLAY VALUE 'CA-DOB OF CA-PATIENT'.
            5 PIC X(20) DISPLAY VALUE '-REQUEST OF DFHCOMMA'.
            5 PIC X(3) DISPLAY VALUE 'REA'.
         3 AZU0000003F.
            5 PIC X(20) DISPLAY VALUE 'CA-ADDRESS OF CA-PAT'.
            5 PIC X(20) DISPLAY VALUE 'IENT-REQUEST OF DFHC'.
            5 PIC X(7) DISPLAY VALUE 'OMMAREA'.
         3 AZU00000041.
            5 PIC X(20) DISPLAY VALUE 'CA-CITY OF CA-PATIEN'.
            5 PIC X(20) DISPLAY VALUE 'T-REQUEST OF DFHCOMM'.
            5 PIC X(4) DISPLAY VALUE 'AREA'.
         3 AZU00000043.
            5 PIC X(20) DISPLAY VALUE 'CA-POSTCODE OF CA-PA'.
            5 PIC X(20) DISPLAY VALUE 'TIENT-REQUEST OF DFH'.
            5 PIC X(8) DISPLAY VALUE 'COMMAREA'.
         3 AZU00000045.
            5 PIC X(20) DISPLAY VALUE 'CA-PHONE-MOBILE OF C'.
            5 PIC X(20) DISPLAY VALUE 'A-PATIENT-REQUEST OF'.
            5 PIC X(12) DISPLAY VALUE ' DFHCOMMAREA'.
         3 AZU00000047.
            5 PIC X(20) DISPLAY VALUE 'CA-EMAIL-ADDRESS OF '.
            5 PIC X(20) DISPLAY VALUE 'CA-PATIENT-REQUEST O'.
            5 PIC X(13) DISPLAY VALUE 'F DFHCOMMAREA'.
         3 AZU00000049.
            5 PIC X(20) DISPLAY VALUE 'CA-USERID OF CA-PATI'.
            5 PIC X(20) DISPLAY VALUE 'ENT-REQUEST OF DFHCO'.
            5 PIC X(6) DISPLAY VALUE 'MMAREA'.
         3 AZU0000004B.
            5 PIC X(20) DISPLAY VALUE 'CA-ADDITIONAL-DATA O'.
            5 PIC X(20) DISPLAY VALUE 'F CA-PATIENT-REQUEST'.
            5 PIC X(15) DISPLAY VALUE ' OF DFHCOMMAREA'.
       1 AZ-COMPARE-WORK-ITEMS.
          3 AZU00000032 PIC X(6) OCCURS 2.
          3 AZU00000034 PIC 9(2) OCCURS 2.
          3 AZU00000036 PIC 9(10) OCCURS 2.
          3 AZU00000038 PIC X(10) OCCURS 2.
          3 AZU0000003A PIC X(10) OCCURS 2.
          3 AZU0000003C PIC X(20) OCCURS 2.
          3 AZU0000003E PIC X(10) OCCURS 2.
          3 AZU00000040 PIC X(20) OCCURS 2.
          3 AZU00000042 PIC X(20) OCCURS 2.
          3 AZU00000044 PIC X(10) OCCURS 2.
          3 AZU00000046 PIC X(20) OCCURS 2.
          3 AZU00000048 PIC X(50) OCCURS 2.
          3 AZU0000004A PIC X(10) OCCURS 2.
          3 AZU0000004C PIC X(32302) OCCURS 2.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-ARG-LIST.
         03 ARG-LENGTH PIC 9(4) COMP-4.
         03 ARG-DATA PIC X(256).
       01 AZ-COMPARE-ITEM-NAME      PIC X(254).
       01 AZ-COMPARE-ITEM-VALUE     PIC X(254).
       01 AZ-COMPARE-ITEM-EXP-VALUE PIC X(254).
      *  *** DFHEIBLK : ZUT0000003F
       1 ZUT0000003F.
      *    *** EIBTIME : ZUT00000040
         2 ZUT00000040 PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT00000041
         2 ZUT00000041 PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT00000042
         2 ZUT00000042 PICTURE X(4).
      *    *** EIBTASKN : ZUT00000043
         2 ZUT00000043 PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT00000044
         2 ZUT00000044 PICTURE X(4).
      *    *** DFHEIGDI : ZUT00000045
         2 ZUT00000045 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000046
         2 ZUT00000046 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000047
         2 ZUT00000047 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000048
         2 ZUT00000048 PICTURE X(1).
      *    *** EIBFN : ZUT00000049
         2 ZUT00000049 PICTURE X(2).
      *    *** EIBRCODE : ZUT0000004A
         2 ZUT0000004A PICTURE X(6).
      *    *** EIBDS : ZUT0000004B
         2 ZUT0000004B PICTURE X(8).
      *    *** EIBREQID : ZUT0000004C
         2 ZUT0000004C PICTURE X(8).
      *    *** EIBRSRCE : ZUT0000004D
         2 ZUT0000004D PICTURE X(8).
      *    *** EIBSYNC : ZUT0000004E
         2 ZUT0000004E PICTURE X.
      *    *** EIBFREE : ZUT0000004F
         2 ZUT0000004F PICTURE X.
      *    *** EIBRECV : ZUT00000050
         2 ZUT00000050 PICTURE X.
      *    *** EIBSEND : ZUT00000051
         2 ZUT00000051 PICTURE X.
      *    *** EIBATT : ZUT00000052
         2 ZUT00000052 PICTURE X.
      *    *** EIBEOC : ZUT00000053
         2 ZUT00000053 PICTURE X.
      *    *** EIBFMH : ZUT00000054
         2 ZUT00000054 PICTURE X.
      *    *** EIBCOMPL : ZUT00000055
         2 ZUT00000055 PICTURE X(1).
      *    *** EIBSIG : ZUT00000056
         2 ZUT00000056 PICTURE X(1).
      *    *** EIBCONF : ZUT00000057
         2 ZUT00000057 PICTURE X(1).
      *    *** EIBERR : ZUT00000058
         2 ZUT00000058 PICTURE X(1).
      *    *** EIBERRCD : ZUT00000059
         2 ZUT00000059 PICTURE X(4).
      *    *** EIBSYNRB : ZUT0000005A
         2 ZUT0000005A PICTURE X.
      *    *** EIBNODAT : ZUT0000005B
         2 ZUT0000005B PICTURE X.
      *    *** EIBRESP : ZUT0000005C
         2 ZUT0000005C PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT0000005D
         2 ZUT0000005D PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT0000005E
         2 ZUT0000005E PICTURE X(1).
      *  *** DFHCOMMAREA : ZUT0000005F
       1 ZUT0000005F.
      *    *** CA-REQUEST-ID : ZUT00000060
         3 ZUT00000060 PIC X(6).
      *    *** CA-RETURN-CODE : ZUT00000061
         3 ZUT00000061 PIC 9(2).
      *    *** CA-PATIENT-ID : ZUT00000062
         3 ZUT00000062 PIC 9(10).
      *    *** CA-REQUEST-SPECIFIC : ZUT00000063
         3 ZUT00000063 PIC X(32482).
      *    *** CA-PATIENT-REQUEST : ZUT00000064
         3 ZUT00000064 REDEFINES ZUT00000063.
      *    *** CA-INS-CARD-NUM : ZUT00000065
         5 ZUT00000065 PIC X(10).
      *    *** CA-FIRST-NAME : ZUT00000066
         5 ZUT00000066 PIC X(10).
      *    *** CA-LAST-NAME : ZUT00000067
         5 ZUT00000067 PIC X(20).
      *    *** CA-DOB : ZUT00000068
         5 ZUT00000068 PIC X(10).
      *    *** CA-ADDRESS : ZUT00000069
         5 ZUT00000069 PIC X(20).
      *    *** CA-CITY : ZUT0000006A
         5 ZUT0000006A PIC X(20).
      *    *** CA-POSTCODE : ZUT0000006B
         5 ZUT0000006B PIC X(10).
      *    *** CA-PHONE-MOBILE : ZUT0000006C
         5 ZUT0000006C PIC X(20).
      *    *** CA-EMAIL-ADDRESS : ZUT0000006D
         5 ZUT0000006D PIC X(50).
      *    *** CA-USERID : ZUT0000006E
         5 ZUT0000006E PIC X(10).
      *    *** CA-ADDITIONAL-DATA : ZUT0000006F
         5 ZUT0000006F PIC X(32302).
      *    *** CA-PATIENT-USER-REQUEST : ZUT00000070
         3 ZUT00000070 REDEFINES ZUT00000063.
      *    *** CA-USERNAME : ZUT00000071
         5 ZUT00000071 PIC X(10).
      *    *** CA-USERPASSWORD : ZUT00000072
         5 ZUT00000072 PIC X(14).
      *    *** CA-ADDITIONAL-DATA : ZUT00000073
         5 ZUT00000073 PIC X(32458).
      *    *** CA-MEDICATION-REQUEST : ZUT00000074
         3 ZUT00000074 REDEFINES ZUT00000063.
      *    *** CA-DRUG-NAME : ZUT00000075
         5 ZUT00000075 PIC X(50).
      *    *** CA-STRENGTH : ZUT00000076
         5 ZUT00000076 PIC X(20).
      *    *** CA-AMOUNT : ZUT00000077
         5 ZUT00000077 PIC 9(03).
      *    *** CA-ROUTE : ZUT00000078
         5 ZUT00000078 PIC X(20).
      *    *** CA-FREQUENCY : ZUT00000079
         5 ZUT00000079 PIC X(20).
      *    *** CA-IDENTIFIER : ZUT0000007A
         5 ZUT0000007A PIC X(20).
      *    *** CA-BIOMED-TYPE : ZUT0000007B
         5 ZUT0000007B PIC X(2).
      *    *** CA-START-DATE : ZUT0000007C
         5 ZUT0000007C PIC X(10).
      *    *** CA-END-DATE : ZUT0000007D
         5 ZUT0000007D PIC X(10).
      *    *** CA-PRESCRIPTION-ID : ZUT0000007E
         5 ZUT0000007E PIC 9(10).
      *    *** CA-ADDITIONAL-DATA : ZUT0000007F
         5 ZUT0000007F PIC X(32317).
      *    *** CA-MEDITATION-REQUEST : ZUT00000080
         3 ZUT00000080 REDEFINES ZUT00000063.
      *    *** CA-MEDITATION-NAME : ZUT00000081
         5 ZUT00000081 PIC X(50).
      *    *** CA-MEDITATION-TYPE : ZUT00000082
         5 ZUT00000082 PIC X(20).
      *    *** CA-RELIEF : ZUT00000083
         5 ZUT00000083 PIC X(20).
      *    *** CA-POSTURE : ZUT00000084
         5 ZUT00000084 PIC X(20).
      *    *** CA-HOW-OFTEN : ZUT00000085
         5 ZUT00000085 PIC X(20).
      *    *** CA-ADDITIONAL-DATA : ZUT00000086
         5 ZUT00000086 PIC X(32352).
      *    *** CA-THRESHOLD-REQUEST : ZUT00000087
         3 ZUT00000087 REDEFINES ZUT00000063.
      *    *** CA-HR-THRESHOLD : ZUT00000088
         5 ZUT00000088 PIC X(10).
      *    *** CA-BP-THRESHOLD : ZUT00000089
         5 ZUT00000089 PIC X(10).
      *    *** CA-MS-THRESHOLD : ZUT0000008A
         5 ZUT0000008A PIC X(10).
      *    *** CA-ADDITIONAL-DATA : ZUT0000008B
         5 ZUT0000008B PIC X(32452).
      *    *** CA-VISIT-REQUEST : ZUT0000008C
         3 ZUT0000008C REDEFINES ZUT00000063.
      *    *** CA-VISIT-DATE : ZUT0000008D
         5 ZUT0000008D PIC X(10).
      *    *** CA-VISIT-TIME : ZUT0000008E
         5 ZUT0000008E PIC X(10).
      *    *** CA-HEART-RATE : ZUT0000008F
         5 ZUT0000008F PIC X(10).
      *    *** CA-BLOOD-PRESSURE : ZUT00000090
         5 ZUT00000090 PIC X(10).
      *    *** CA-MENTAL-STATE : ZUT00000091
         5 ZUT00000091 PIC X(10).
      *    *** CA-ADDITIONAL-DATA : ZUT00000092
         5 ZUT00000092 PIC X(32432).
       PROCEDURE DIVISION USING AZ-TEST
           ZUT0000003F ZUT0000005F.
      * START
           DISPLAY 'TEST_TEST4 STARTED...'
           MOVE 0 TO AZ-TEST-NAME-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * INITIALIZE PARAMETER
           PERFORM INITIALIZE-PARM
      * SET AREA ADDRESS TO POINTER
      * SET INPUT VALUE
           MOVE 0 TO RETURN-CODE.
      * CALL TEST PROGRAM
           DISPLAY 'CALL HCIPDB01'
           CALL PROGRAM-NAME
           USING ZUT0000003F ZUT0000005F
           .
      * EVALUATE OUTPUT VALUE
           MOVE 0 TO RETURN-CODE
           IF ZUT00000060 OF ZUT0000005F = AZU00000025 THEN
             CONTINUE
           ELSE
             MOVE ZUT00000060 OF ZUT0000005F TO AZU00000032(1)
             MOVE AZU00000025 TO AZU00000032(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000031
             MOVE LENGTH OF AZU00000031 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000032(1)
             MOVE 6 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000032(2)
             MOVE 6 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF (ZUT00000061 OF ZUT0000005F IS NUMERIC)
               AND (ZUT00000061 OF ZUT0000005F = 0) THEN
             CONTINUE
           ELSE
             MOVE ZUT00000061 OF ZUT0000005F TO AZU00000034(1)
             MOVE 0 TO AZU00000034(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000033
             MOVE LENGTH OF AZU00000033 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000034(1)
             MOVE 2 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000034(2)
             MOVE 2 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF (ZUT00000062 OF ZUT0000005F IS NUMERIC)
               AND (ZUT00000062 OF ZUT0000005F = 2) THEN
             CONTINUE
           ELSE
             MOVE ZUT00000062 OF ZUT0000005F TO AZU00000036(1)
             MOVE 2 TO AZU00000036(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000035
             MOVE LENGTH OF AZU00000035 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000036(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000036(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT00000065 OF ZUT00000064 OF ZUT0000005F = AZU00000026
           THEN
             CONTINUE
           ELSE
             MOVE ZUT00000065 OF ZUT00000064 OF ZUT0000005F TO
           AZU00000038(1)
             MOVE AZU00000026 TO AZU00000038(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000037
             MOVE LENGTH OF AZU00000037 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000038(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000038(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT00000066 OF ZUT00000064 OF ZUT0000005F = AZU00000027
           THEN
             CONTINUE
           ELSE
             MOVE ZUT00000066 OF ZUT00000064 OF ZUT0000005F TO
           AZU0000003A(1)
             MOVE AZU00000027 TO AZU0000003A(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000039
             MOVE LENGTH OF AZU00000039 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000003A(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000003A(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT00000067 OF ZUT00000064 OF ZUT0000005F = AZU00000028
           THEN
             CONTINUE
           ELSE
             MOVE ZUT00000067 OF ZUT00000064 OF ZUT0000005F TO
           AZU0000003C(1)
             MOVE AZU00000028 TO AZU0000003C(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000003B
             MOVE LENGTH OF AZU0000003B TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000003C(1)
             MOVE 20 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000003C(2)
             MOVE 20 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT00000068 OF ZUT00000064 OF ZUT0000005F = AZU00000029
           THEN
             CONTINUE
           ELSE
             MOVE ZUT00000068 OF ZUT00000064 OF ZUT0000005F TO
           AZU0000003E(1)
             MOVE AZU00000029 TO AZU0000003E(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000003D
             MOVE LENGTH OF AZU0000003D TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000003E(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000003E(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT00000069 OF ZUT00000064 OF ZUT0000005F = AZU0000002A
           THEN
             CONTINUE
           ELSE
             MOVE ZUT00000069 OF ZUT00000064 OF ZUT0000005F TO
           AZU00000040(1)
             MOVE AZU0000002A TO AZU00000040(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000003F
             MOVE LENGTH OF AZU0000003F TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000040(1)
             MOVE 20 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000040(2)
             MOVE 20 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT0000006A OF ZUT00000064 OF ZUT0000005F = AZU0000002B
           THEN
             CONTINUE
           ELSE
             MOVE ZUT0000006A OF ZUT00000064 OF ZUT0000005F TO
           AZU00000042(1)
             MOVE AZU0000002B TO AZU00000042(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000041
             MOVE LENGTH OF AZU00000041 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000042(1)
             MOVE 20 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000042(2)
             MOVE 20 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT0000006B OF ZUT00000064 OF ZUT0000005F = AZU0000002C
           THEN
             CONTINUE
           ELSE
             MOVE ZUT0000006B OF ZUT00000064 OF ZUT0000005F TO
           AZU00000044(1)
             MOVE AZU0000002C TO AZU00000044(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000043
             MOVE LENGTH OF AZU00000043 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000044(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000044(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT0000006C OF ZUT00000064 OF ZUT0000005F = AZU0000002D
           THEN
             CONTINUE
           ELSE
             MOVE ZUT0000006C OF ZUT00000064 OF ZUT0000005F TO
           AZU00000046(1)
             MOVE AZU0000002D TO AZU00000046(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000045
             MOVE LENGTH OF AZU00000045 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000046(1)
             MOVE 20 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000046(2)
             MOVE 20 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT0000006D OF ZUT00000064 OF ZUT0000005F = AZU0000002E
           THEN
             CONTINUE
           ELSE
             MOVE ZUT0000006D OF ZUT00000064 OF ZUT0000005F TO
           AZU00000048(1)
             MOVE AZU0000002E TO AZU00000048(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000047
             MOVE LENGTH OF AZU00000047 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000048(1)
             MOVE 50 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000048(2)
             MOVE 50 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT0000006E OF ZUT00000064 OF ZUT0000005F = AZU0000002F
           THEN
             CONTINUE
           ELSE
             MOVE ZUT0000006E OF ZUT00000064 OF ZUT0000005F TO
           AZU0000004A(1)
             MOVE AZU0000002F TO AZU0000004A(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000049
             MOVE LENGTH OF AZU00000049 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000004A(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000004A(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT0000006F OF ZUT00000064 OF ZUT0000005F = AZU00000030
           THEN
             CONTINUE
           ELSE
             MOVE ZUT0000006F OF ZUT00000064 OF ZUT0000005F TO
           AZU0000004C(1)
             MOVE AZU00000030 TO AZU0000004C(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000004B
             MOVE LENGTH OF AZU0000004B TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000004C(1)
             MOVE 254 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000004C(2)
             MOVE 254 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
      * END
           DISPLAY 'TEST_TEST4 SUCCESSFUL.'
           GOBACK.
       INITIALIZE-PARM.
           EXIT.
       THROW-ASSERTION.
           MOVE 1 TO MESSAGE-LEN OF BZ-ASSERT
           STRING 'COMPARE FAILED IN PROCEDURE DIVISION.'
             DELIMITED BY SIZE INTO MESSAGE-TXT OF BZ-ASSERT
             WITH POINTER MESSAGE-LEN OF BZ-ASSERT
           END-STRING
           SUBTRACT 1 FROM MESSAGE-LEN OF BZ-ASSERT
           SET ADDRESS OF AZ-COMPARE-ITEM-NAME TO
           AZ-COMPARE-ITEM-NAME-PTR.
           SET ADDRESS OF AZ-COMPARE-ITEM-VALUE TO
           AZ-COMPARE-ITEM-VALUE-PTR.
           SET ADDRESS OF AZ-COMPARE-ITEM-EXP-VALUE TO
           AZ-COMPARE-ITEM-EXP-VALUE-PTR.
           DISPLAY '****************************************************
      -    '****************************'
           DISPLAY 'AZU2001W THE TEST "' AZ-TEST(1:AZ-TEST-NAME-LEN) '"
      -    'FAILED DUE TO AN ASSERTION.'
           DISPLAY 'AZU1101I ' MESSAGE-TXT OF BZ-ASSERT(1:MESSAGE-LEN
           OF BZ-ASSERT)
           DISPLAY ' DATA ITEM NAME : '
           AZ-COMPARE-ITEM-NAME(1:AZ-COMPARE-ITEM-NAME-LEN)
           DISPLAY '  VALUE         : '
           AZ-COMPARE-ITEM-VALUE(1:AZ-COMPARE-ITEM-VALUE-LEN)
           DISPLAY '  EXPECTED VALUE: '
           AZ-COMPARE-ITEM-EXP-VALUE(1:AZ-COMPARE-ITEM-EXP-VALUE-LEN)
           DISPLAY '****************************************************
      -    '****************************'
           CALL BZUASSRT USING BZ-P1 BZ-P2 BZ-P3 BZ-ASSERT
           MOVE 1 TO TRACE-LEN OF BZ-TRACE
           STRING 'ITEM NAME='
           AZ-COMPARE-ITEM-NAME(1:AZ-COMPARE-ITEM-NAME-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
           SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
           SET AZ-TRACE-PTR TO ADDRESS OF TRACE-TXT OF BZ-TRACE
           CALL BZUTRACE USING BZ-TRACE
           MOVE 1 TO TRACE-LEN OF BZ-TRACE
           STRING 'VALUE='
           AZ-COMPARE-ITEM-VALUE(1:AZ-COMPARE-ITEM-VALUE-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
           SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
           CALL BZUTRACE USING BZ-TRACE
           MOVE 1 TO TRACE-LEN OF BZ-TRACE
           STRING 'EXPECTED VALUE='
           AZ-COMPARE-ITEM-EXP-VALUE(1:AZ-COMPARE-ITEM-EXP-VALUE-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
           SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
           CALL BZUTRACE USING BZ-TRACE
           EXIT.
       END PROGRAM TEST_TEST4.
      *+---------------------------------------------------------------+
      *| BZU_TEST                                                      |
      *|     THIS PROGRAM IS CALLBACK DEFINITION FOR TEST              |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'BZU_TEST'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 PROGRAM-NAME   PIC X(8)  VALUE 'HCIPDB01'.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM TEST CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 ASSERT-ST.
         03 ASSERT-RC PIC 9(9) BINARY VALUE 4.
         03 ASSERT-TEXT PIC 9(4) BINARY VALUE 0.
       01 AZ-TEST-NAME-LEN       PIC S9(9) COMP-5.
       LOCAL-STORAGE SECTION.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       01 AZ-ARG-LIST.
         03 ARG-LENGTH PIC 9(4) COMP-4.
         03 ARG-DATA PIC X(256).
      *  *** DFHEIBLK : ZUT0000003F
       1 ZUT0000003F.
      *    *** EIBTIME : ZUT00000040
         2 ZUT00000040 PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT00000041
         2 ZUT00000041 PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT00000042
         2 ZUT00000042 PICTURE X(4).
      *    *** EIBTASKN : ZUT00000043
         2 ZUT00000043 PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT00000044
         2 ZUT00000044 PICTURE X(4).
      *    *** DFHEIGDI : ZUT00000045
         2 ZUT00000045 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000046
         2 ZUT00000046 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000047
         2 ZUT00000047 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000048
         2 ZUT00000048 PICTURE X(1).
      *    *** EIBFN : ZUT00000049
         2 ZUT00000049 PICTURE X(2).
      *    *** EIBRCODE : ZUT0000004A
         2 ZUT0000004A PICTURE X(6).
      *    *** EIBDS : ZUT0000004B
         2 ZUT0000004B PICTURE X(8).
      *    *** EIBREQID : ZUT0000004C
         2 ZUT0000004C PICTURE X(8).
      *    *** EIBRSRCE : ZUT0000004D
         2 ZUT0000004D PICTURE X(8).
      *    *** EIBSYNC : ZUT0000004E
         2 ZUT0000004E PICTURE X.
      *    *** EIBFREE : ZUT0000004F
         2 ZUT0000004F PICTURE X.
      *    *** EIBRECV : ZUT00000050
         2 ZUT00000050 PICTURE X.
      *    *** EIBSEND : ZUT00000051
         2 ZUT00000051 PICTURE X.
      *    *** EIBATT : ZUT00000052
         2 ZUT00000052 PICTURE X.
      *    *** EIBEOC : ZUT00000053
         2 ZUT00000053 PICTURE X.
      *    *** EIBFMH : ZUT00000054
         2 ZUT00000054 PICTURE X.
      *    *** EIBCOMPL : ZUT00000055
         2 ZUT00000055 PICTURE X(1).
      *    *** EIBSIG : ZUT00000056
         2 ZUT00000056 PICTURE X(1).
      *    *** EIBCONF : ZUT00000057
         2 ZUT00000057 PICTURE X(1).
      *    *** EIBERR : ZUT00000058
         2 ZUT00000058 PICTURE X(1).
      *    *** EIBERRCD : ZUT00000059
         2 ZUT00000059 PICTURE X(4).
      *    *** EIBSYNRB : ZUT0000005A
         2 ZUT0000005A PICTURE X.
      *    *** EIBNODAT : ZUT0000005B
         2 ZUT0000005B PICTURE X.
      *    *** EIBRESP : ZUT0000005C
         2 ZUT0000005C PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT0000005D
         2 ZUT0000005D PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT0000005E
         2 ZUT0000005E PICTURE X(1).
      *  *** DFHCOMMAREA : ZUT0000005F
       1 ZUT0000005F.
      *    *** CA-REQUEST-ID : ZUT00000060
         3 ZUT00000060 PIC X(6).
      *    *** CA-RETURN-CODE : ZUT00000061
         3 ZUT00000061 PIC 9(2).
      *    *** CA-PATIENT-ID : ZUT00000062
         3 ZUT00000062 PIC 9(10).
      *    *** CA-REQUEST-SPECIFIC : ZUT00000063
         3 ZUT00000063 PIC X(32482).
      *    *** CA-PATIENT-REQUEST : ZUT00000064
         3 ZUT00000064 REDEFINES ZUT00000063.
      *    *** CA-INS-CARD-NUM : ZUT00000065
         5 ZUT00000065 PIC X(10).
      *    *** CA-FIRST-NAME : ZUT00000066
         5 ZUT00000066 PIC X(10).
      *    *** CA-LAST-NAME : ZUT00000067
         5 ZUT00000067 PIC X(20).
      *    *** CA-DOB : ZUT00000068
         5 ZUT00000068 PIC X(10).
      *    *** CA-ADDRESS : ZUT00000069
         5 ZUT00000069 PIC X(20).
      *    *** CA-CITY : ZUT0000006A
         5 ZUT0000006A PIC X(20).
      *    *** CA-POSTCODE : ZUT0000006B
         5 ZUT0000006B PIC X(10).
      *    *** CA-PHONE-MOBILE : ZUT0000006C
         5 ZUT0000006C PIC X(20).
      *    *** CA-EMAIL-ADDRESS : ZUT0000006D
         5 ZUT0000006D PIC X(50).
      *    *** CA-USERID : ZUT0000006E
         5 ZUT0000006E PIC X(10).
      *    *** CA-ADDITIONAL-DATA : ZUT0000006F
         5 ZUT0000006F PIC X(32302).
      *    *** CA-PATIENT-USER-REQUEST : ZUT00000070
         3 ZUT00000070 REDEFINES ZUT00000063.
      *    *** CA-USERNAME : ZUT00000071
         5 ZUT00000071 PIC X(10).
      *    *** CA-USERPASSWORD : ZUT00000072
         5 ZUT00000072 PIC X(14).
      *    *** CA-ADDITIONAL-DATA : ZUT00000073
         5 ZUT00000073 PIC X(32458).
      *    *** CA-MEDICATION-REQUEST : ZUT00000074
         3 ZUT00000074 REDEFINES ZUT00000063.
      *    *** CA-DRUG-NAME : ZUT00000075
         5 ZUT00000075 PIC X(50).
      *    *** CA-STRENGTH : ZUT00000076
         5 ZUT00000076 PIC X(20).
      *    *** CA-AMOUNT : ZUT00000077
         5 ZUT00000077 PIC 9(03).
      *    *** CA-ROUTE : ZUT00000078
         5 ZUT00000078 PIC X(20).
      *    *** CA-FREQUENCY : ZUT00000079
         5 ZUT00000079 PIC X(20).
      *    *** CA-IDENTIFIER : ZUT0000007A
         5 ZUT0000007A PIC X(20).
      *    *** CA-BIOMED-TYPE : ZUT0000007B
         5 ZUT0000007B PIC X(2).
      *    *** CA-START-DATE : ZUT0000007C
         5 ZUT0000007C PIC X(10).
      *    *** CA-END-DATE : ZUT0000007D
         5 ZUT0000007D PIC X(10).
      *    *** CA-PRESCRIPTION-ID : ZUT0000007E
         5 ZUT0000007E PIC 9(10).
      *    *** CA-ADDITIONAL-DATA : ZUT0000007F
         5 ZUT0000007F PIC X(32317).
      *    *** CA-MEDITATION-REQUEST : ZUT00000080
         3 ZUT00000080 REDEFINES ZUT00000063.
      *    *** CA-MEDITATION-NAME : ZUT00000081
         5 ZUT00000081 PIC X(50).
      *    *** CA-MEDITATION-TYPE : ZUT00000082
         5 ZUT00000082 PIC X(20).
      *    *** CA-RELIEF : ZUT00000083
         5 ZUT00000083 PIC X(20).
      *    *** CA-POSTURE : ZUT00000084
         5 ZUT00000084 PIC X(20).
      *    *** CA-HOW-OFTEN : ZUT00000085
         5 ZUT00000085 PIC X(20).
      *    *** CA-ADDITIONAL-DATA : ZUT00000086
         5 ZUT00000086 PIC X(32352).
      *    *** CA-THRESHOLD-REQUEST : ZUT00000087
         3 ZUT00000087 REDEFINES ZUT00000063.
      *    *** CA-HR-THRESHOLD : ZUT00000088
         5 ZUT00000088 PIC X(10).
      *    *** CA-BP-THRESHOLD : ZUT00000089
         5 ZUT00000089 PIC X(10).
      *    *** CA-MS-THRESHOLD : ZUT0000008A
         5 ZUT0000008A PIC X(10).
      *    *** CA-ADDITIONAL-DATA : ZUT0000008B
         5 ZUT0000008B PIC X(32452).
      *    *** CA-VISIT-REQUEST : ZUT0000008C
         3 ZUT0000008C REDEFINES ZUT00000063.
      *    *** CA-VISIT-DATE : ZUT0000008D
         5 ZUT0000008D PIC X(10).
      *    *** CA-VISIT-TIME : ZUT0000008E
         5 ZUT0000008E PIC X(10).
      *    *** CA-HEART-RATE : ZUT0000008F
         5 ZUT0000008F PIC X(10).
      *    *** CA-BLOOD-PRESSURE : ZUT00000090
         5 ZUT00000090 PIC X(10).
      *    *** CA-MENTAL-STATE : ZUT00000091
         5 ZUT00000091 PIC X(10).
      *    *** CA-ADDITIONAL-DATA : ZUT00000092
         5 ZUT00000092 PIC X(32432).
       PROCEDURE DIVISION.
      * SET INPUT VALUE
           ENTRY "PGM_INPT_HCIPDB01" USING AZ-TEST AZ-INFO-BLOCK
           ZUT0000003F ZUT0000005F.
           DISPLAY 'PGM_INPT_HCIPDB01 INPUT VALUES...'.
           MOVE 0 TO RETURN-CODE.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR CHARACTERS
             BEFORE INITIAL SPACE.
           EVALUATE AZ-TEST(1:AZ-TEST-NAME-LEN)
           WHEN SPACE
             CONTINUE
           WHEN OTHER
             CONTINUE
           END-EVALUATE.
           PERFORM TEARDOWN.
      * EVALUATE OUTPUT VALUE
           ENTRY "PGM_OUTP_HCIPDB01" USING AZ-TEST AZ-INFO-BLOCK
           ZUT0000003F ZUT0000005F.
           DISPLAY 'PGM_OUTP_HCIPDB01 CHECK VALUES...'.
           MOVE 4 TO RETURN-CODE.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR CHARACTERS
             BEFORE INITIAL SPACE.
           EVALUATE AZ-TEST(1:AZ-TEST-NAME-LEN)
           WHEN SPACE
             CONTINUE
           WHEN 'TEST1'
             MOVE 0 TO RETURN-CODE
           WHEN 'SQL922'
             MOVE 0 TO RETURN-CODE
           WHEN 'TEST4'
             MOVE 0 TO RETURN-CODE
           WHEN OTHER
             CONTINUE
           END-EVALUATE.
           PERFORM TEARDOWN.
       TEARDOWN.
           DISPLAY 'BZU_TEST SUCCESSFUL.'
           GOBACK.
       END PROGRAM BZU_TEST.
      *+---------------------------------------------------------------+
      *| BZU_INIT                                                      |
      *|     INITIAL PROCEDURE                                         |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'BZU_INIT'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 AZ-TEST-NAME-LEN      PIC S9(9) COMP-5.
       01 AZ-TESTCASE-ID        PIC X(36)
           VALUE 'ee5b957f-44bb-4a99-9fc3-0202cfcf7a1a'.
       LINKAGE SECTION.
       01 AZ-TEST               PIC X(80).
       01 AZ-TEST-ID            PIC X(80).
       PROCEDURE DIVISION USING AZ-TEST AZ-TEST-ID.
           MOVE 0 TO AZ-TEST-NAME-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
           DISPLAY 'BZU_INIT : ' AZ-TEST(1:AZ-TEST-NAME-LEN)
           MOVE AZ-TESTCASE-ID TO AZ-TEST-ID
           GOBACK.
       END PROGRAM BZU_INIT.
      *+---------------------------------------------------------------+
      *| BZU_TERM                                                      |
      *|     TERMINATION PROCEDURE                                     |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'BZU_TERM'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 AZ-TEST-NAME-LEN      PIC S9(9) COMP-5.
       LINKAGE SECTION.
       01 AZ-TEST               PIC X(80).
       PROCEDURE DIVISION USING AZ-TEST.
           MOVE 0 TO AZ-TEST-NAME-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
           DISPLAY 'BZU_TERM : ' AZ-TEST(1:AZ-TEST-NAME-LEN)
           GOBACK.
       END PROGRAM BZU_TERM.
      *+---------------------------------------------------------------+
      *| EVALOPT                                                       |
      *|   FUNCTION TO EVALUATE THAT THE BIT OF OPTION DATA            |
      *|   (1) TAKE AND OF GROUP COMMON MASK AND OPTION IN ARG0        |
      *|   (2) CHECK IF THE GROUP MASK IS EQUAL TO (1)                 |
      *|       IF EQUAL,    RTN01 IS 0                                 |
      *|       IF NO EQUAL, RTN01 IS 1                                 |
      *+---------------------------------------------------------------+
       ID DIVISION.
       PROGRAM-ID. EVALOPT.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  OUT1-REC.
         05 OUT1-DATA                PIC X(1) OCCURS 8.
       01 OUT1-DATA-R REDEFINES OUT1-REC.
         05 OUT1-DATA-UP             PIC X(4).
         05 OUT1-DATA-DOWN           PIC X(4).
       01  OUT2-REC.
         05  OUT2-DATA               PIC X(1) OCCURS 8.
       01  OUT2-DATA-R REDEFINES OUT2-REC.
         05 OUT2-DATA-UP             PIC X(4).
         05 OUT2-DATA-DOWN           PIC X(4).
       01  WORK1-REC.
         05  WORK1-DATA              PIC X(1) OCCURS 8.
       01  WORK1-DATA-R REDEFINES WORK1-REC.
         05 WORK1-DATA-UP            PIC X(4).
         05 WORK1-DATA-DOWN          PIC X(4).
       01  WORK-AREA.
         05  WORK-HEX-UP             PIC 9(4)  COMP.
         05  WORK-HEX-DOWN           PIC 9(4)  COMP.
       01  HEX-CHG-BEF.
         05  HEX-CHANGE-LV           PIC X(1) VALUE LOW-VALUE.
         05  HEX-CHANGE-BEFORE       PIC X(1).
       01  HEX-CHG-AFT      REDEFINES  HEX-CHG-BEF.
         05  HEX-CHANGE-AFTER        PIC 9(4)  COMP.
       01  TBL-CHANGE-DATA.
          05  FILLER                 PIC  X(004) VALUE '0000'.
          05  FILLER                 PIC  X(001) VALUE '0'.
          05  FILLER                 PIC  X(004) VALUE '0001'.
          05  FILLER                 PIC  X(001) VALUE '1'.
          05  FILLER                 PIC  X(004) VALUE '0010'.
          05  FILLER                 PIC  X(001) VALUE '2'.
          05  FILLER                 PIC  X(004) VALUE '0011'.
          05  FILLER                 PIC  X(001) VALUE '3'.
          05  FILLER                 PIC  X(004) VALUE '0100'.
          05  FILLER                 PIC  X(001) VALUE '4'.
          05  FILLER                 PIC  X(004) VALUE '0101'.
          05  FILLER                 PIC  X(001) VALUE '5'.
          05  FILLER                 PIC  X(004) VALUE '0110'.
          05  FILLER                 PIC  X(001) VALUE '6'.
          05  FILLER                 PIC  X(004) VALUE '0111'.
          05  FILLER                 PIC  X(001) VALUE '7'.
          05  FILLER                 PIC  X(004) VALUE '1000'.
          05  FILLER                 PIC  X(001) VALUE '8'.
          05  FILLER                 PIC  X(004) VALUE '1001'.
          05  FILLER                 PIC  X(001) VALUE '9'.
          05  FILLER                 PIC  X(004) VALUE '1010'.
          05  FILLER                 PIC  X(001) VALUE 'A'.
          05  FILLER                 PIC  X(004) VALUE '1011'.
          05  FILLER                 PIC  X(001) VALUE 'B'.
          05  FILLER                 PIC  X(004) VALUE '1100'.
          05  FILLER                 PIC  X(001) VALUE 'C'.
          05  FILLER                 PIC  X(004) VALUE '1101'.
          05  FILLER                 PIC  X(001) VALUE 'D'.
          05  FILLER                 PIC  X(004) VALUE '1110'.
          05  FILLER                 PIC  X(001) VALUE 'E'.
          05  FILLER                 PIC  X(004) VALUE '1111'.
          05  FILLER                 PIC  X(001) VALUE 'F'.
          01  TBL-DATA REDEFINES TBL-CHANGE-DATA.
           05  TBL-CHG  OCCURS  16 TIMES.
             10  TBL-BIT-CHAR        PIC  X(004).
             10  TBL-HEX-CHAR        PIC  X(001).
       01 BIT-COUNT                  PIC 9(1).
       01 I                          PIC S9(8) COMP.
       LINKAGE SECTION.
       01 G-MASK.
         03 D-G-MASK                 PIC X(1) OCCURS 19.
       01 COM-MASK.
         03 D-COM-MASK               PIC X(1) OCCURS 19.
       01 O-ARG0.
         03 D-O-ARG0                 PIC X(1) OCCURS 19.
       01 BYTE-COUNT                 PIC S9(8) COMP.
       01 RTN01                      PIC 9(1).
       PROCEDURE DIVISION USING G-MASK COM-MASK O-ARG0 BYTE-COUNT
            RTN01.
            MOVE 0 TO RTN01
            PERFORM VARYING I FROM 1 BY 1 UNTIL I > BYTE-COUNT
              PERFORM ANDCOMMASK
              IF RTN01 = 1 THEN
                GOBACK
              END-IF
            END-PERFORM.
            EXIT PROGRAM.
       ANDCOMMASK.
      * CONVERT GROUP COMMON MASK TO BIT
            MOVE D-COM-MASK(I) TO HEX-CHANGE-BEFORE.
            DIVIDE 16 INTO HEX-CHANGE-AFTER GIVING WORK-HEX-UP
                                         REMAINDER WORK-HEX-DOWN.
            MOVE TBL-BIT-CHAR(WORK-HEX-UP + 1)   TO OUT1-DATA-UP.
            MOVE TBL-BIT-CHAR(WORK-HEX-DOWN + 1) TO OUT1-DATA-DOWN.
      * CONVERT OPTION IN ARG0 TO BIT
            MOVE D-O-ARG0(I) TO HEX-CHANGE-BEFORE.
            DIVIDE 16 INTO HEX-CHANGE-AFTER GIVING WORK-HEX-UP
                                         REMAINDER WORK-HEX-DOWN.
            MOVE TBL-BIT-CHAR(WORK-HEX-UP + 1)   TO OUT2-DATA-UP.
            MOVE TBL-BIT-CHAR(WORK-HEX-DOWN + 1) TO OUT2-DATA-DOWN.
      * CREATE EVAL BIT FROM GROUP COMMON MASK BIT AND ARG0 BIT
            PERFORM VARYING BIT-COUNT FROM 1 BY 1 UNTIL BIT-COUNT > 8
              IF OUT1-DATA(BIT-COUNT) = '1' AND
                 OUT2-DATA(BIT-COUNT) = '1' THEN
                MOVE '1' TO WORK1-DATA(BIT-COUNT)
              ELSE
                MOVE '0' TO WORK1-DATA(BIT-COUNT)
              END-IF
            END-PERFORM.
      * CONVERT GROUP MASK TO BIT DATA
            MOVE D-G-MASK(I) TO HEX-CHANGE-BEFORE.
            DIVIDE 16 INTO HEX-CHANGE-AFTER GIVING WORK-HEX-UP
                                         REMAINDER WORK-HEX-DOWN.
            MOVE TBL-BIT-CHAR(WORK-HEX-UP + 1)   TO OUT1-DATA-UP.
            MOVE TBL-BIT-CHAR(WORK-HEX-DOWN + 1) TO OUT1-DATA-DOWN.
      * CHECK IF EQUAL BETWEEN EVAL BIT AND GROUP MASK BIT
            IF WORK1-DATA-UP = OUT1-DATA-UP AND
               WORK1-DATA-DOWN = OUT1-DATA-DOWN THEN
              CONTINUE
            ELSE
              MOVE 1 TO RTN01
            END-IF
            EXIT.
       END PROGRAM 'EVALOPT'.
      *+---------------------------------------------------------------+
      *| GTMEMRC                                                       |
      *|     GET DATA AREA FOR RECORD COUNT OF SUBSYSTEM GROUP         |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'GTMEMRC'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 BZUGTMEM            PIC X(8) VALUE 'BZUGTMEM'.
       01 DATA-SIZE           PIC 9(8) COMP-4.
       LINKAGE SECTION.
       01 TC-WORK-AREA        PIC X(256).
       01 AZ-GRP-INDEX        PIC 9(8).
       01 AZ-FLAG-IN          PIC 9(1).
       01 AZ-RECORD-PTR       POINTER.
       01 AZ-RECORD-PTR-VALUE
            REDEFINES AZ-RECORD-PTR  PIC S9(9) COMP-5.
       01 DATA-PTR            POINTER.
       01 DATA-PTR-VALUE
            REDEFINES DATA-PTR  PIC S9(9) COMP-5.
       01 DATA-AREA.
         03 RECORD-COUNT-IO OCCURS 6.
           05 RECORD-COUNT-OT PIC 9(5) COMP-5.
           05 RECORD-COUNT-IN PIC 9(5) COMP-5.
       01 WK-RECORD-COUNT     PIC 9(5) COMP-5.
       PROCEDURE DIVISION USING TC-WORK-AREA AZ-GRP-INDEX AZ-FLAG-IN
           AZ-RECORD-PTR.
           SET ADDRESS OF DATA-PTR TO ADDRESS OF TC-WORK-AREA.
           IF DATA-PTR-VALUE = 0 THEN
             COMPUTE DATA-SIZE = LENGTH OF WK-RECORD-COUNT * 2 * 6
             CALL BZUGTMEM USING DATA-SIZE RETURNING DATA-PTR
             SET ADDRESS OF DATA-AREA TO DATA-PTR
             DISPLAY 'AREA ALLOCATED FOR RECORD COUNT:' DATA-SIZE
           END-IF
           SET AZ-RECORD-PTR TO DATA-PTR
           COMPUTE AZ-RECORD-PTR-VALUE = AZ-RECORD-PTR-VALUE +
                 LENGTH OF WK-RECORD-COUNT * 2 * (AZ-GRP-INDEX - 1)
           IF AZ-FLAG-IN = 1 THEN
             ADD LENGTH OF WK-RECORD-COUNT TO AZ-RECORD-PTR-VALUE
           END-IF
           SET ADDRESS OF WK-RECORD-COUNT TO AZ-RECORD-PTR
           GOBACK.
       END PROGRAM 'GTMEMRC'.
      *+---------------------------------------------------------------+
      *| AZU_GENERIC_CICS                                              |
      *|   GENERIC CICS CALLBACK EXIT POINT                            |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'AZU_GENERIC_CICS'.
       PROCEDURE DIVISION.
      * CHECK OUTPUT VALUE
      * CICS_INPT.
           ENTRY 'CICS_INPT'.
           DISPLAY 'CICS_INPT ...'
           MOVE 4 TO RETURN-CODE.
           GOBACK.
      * CICS_OUTP.
           ENTRY 'CICS_OUTP'.
           DISPLAY 'CICS_OUTP ...'
           MOVE 4 TO RETURN-CODE.
           GOBACK.
      * CICS_INPT_0E08 FOR RETURN.
           ENTRY 'CICS_INPT_0E08'.
           DISPLAY 'CICS_INPT_0E08 ...'
           MOVE 0 TO RETURN-CODE.
           GOBACK.
       END PROGRAM 'AZU_GENERIC_CICS'.
      *+---------------------------------------------------------------+
      *| AZU_GENERIC_DB2                                               |
      *|   GENERIC DB2 CALLBACK EXIT POINT                             |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'AZU_GENERIC_DB2'.
       PROCEDURE DIVISION.
      * CHECK OUTPUT VALUE
      * DB2_INPT.
           ENTRY 'DB2_INPT'.
           DISPLAY 'DB2_INPT ...'
           MOVE 4 TO RETURN-CODE.
           GOBACK.
      * DB2_OUTP.
           ENTRY 'DB2_OUTP'.
           DISPLAY 'DB2_OUTP ...'
           MOVE 4 TO RETURN-CODE.
           GOBACK.
       END PROGRAM 'AZU_GENERIC_DB2'.
      *+---------------------------------------------------------------+
      *| PROGRAM FOR EXEC CICS RETURN                                  |
      *|    FUNCTION CODE: 0E08                                        |
      *|                                                               |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'CICS_0E08_HCIPDB01'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM CICS CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 AZ-TEST-LEN       PIC S9(8) COMP.
       01 AZ-RECORD.
         03 AZ-RECORD-COUNT-OT OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
         03 AZ-RECORD-COUNT-IN OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
       01 AZ-GRP-INDEX       PIC 9(8).
       01 AZ-FLAG-IN         PIC 9(1).
       01 AZ-RECORD-PTR      POINTER.
       01 AZ-OPT-MASK-DATA2  PIC X(2).
       01 AZ-OPT-MASK-DATA9  PIC X(9).
       01 AZ-OPT-MASK-DATA11 PIC X(11).
       01 AZ-OPT-MASK-DATA19 PIC X(19).
       01 AZ-OPT-BYTECOUNT   PIC S9(8) COMP.
       01 AZ-OPT-RC          PIC 9(1) VALUE 0.
       01 AZ-OPT-COMMASK.
         03  AZ-OPT-COMMASK-DATA2  PIC X(2) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA9  PIC X(9) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA11 PIC X(11) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA19 PIC X(19) OCCURS 1.
       01 AZ-LINE-BYTE      PIC S9(2) COMP.
       01 AZ-LINE-NUM       PIC 9(5).
       01 AZ-LINE-NUM-R   REDEFINES AZ-LINE-NUM.
         03 AZ-LINE-NUM-RD  PIC 9(1) OCCURS 5.
       01 AZ-LINE-I         PIC S9(8) COMP.
       01 AZ-LINE-J         PIC S9(8) COMP.
       01 AZ-RC-WORK        PIC S9(4) USAGE BINARY.
       LOCAL-STORAGE SECTION.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       01 AZ-WK-RECORD-COUNT PIC 9(5) COMP-5.
       01 AZ-MODX                   PIC X(4).
       01 AZ-DFHEIBLK.
         03 FILLER                  PIC X(85).
       01 AZ-DFHCOMMAREA.
         03 FILLER                  PIC X(1).
       01 ARG0.
         03 ARG0-1        PIC X(2).
         03 ARG0-A        PIC X(28).
         03 ARG0-B REDEFINES ARG0-A.
           05 ARG0-2      PIC X(9).
           05 FILLER      PIC X(19).
         03 ARG0-C REDEFINES ARG0-A.
           05 FILLER      PIC X(6).
           05 ARG0-D.
             07 ARG0-3    PIC 9(1) OCCURS 22.
       01 ARG1            POINTER.
       01 ARG2            POINTER.
       01 ARG3            POINTER.
       01 ARG4            POINTER.
       01 ARG5            POINTER.
       01 ARG6            POINTER.
       01 ARG7            POINTER.
       01 ARG8            POINTER.
       01 ARG9            POINTER.
       01 ARG10           POINTER.
       01 AZ-CICS-TARGET-NAME-DEF4 PIC X(4).
       01 AZ-CICS-TARGET-NAME-DEF7 PIC X(7).
       01 AZ-CICS-TARGET-NAME-DEF8 PIC X(8).
       PROCEDURE DIVISION.
      * CHECK OUTPUT VALUE
      * CICS_INPT_0E08_HCIPDB01.
           ENTRY 'CICS_INPT_0E08_HCIPDB01' USING AZ-TEST
           AZ-INFO-BLOCK AZ-DFHEIBLK AZ-DFHCOMMAREA ARG0 ARG1 ARG2
           ARG3 ARG4 ARG5 ARG6 ARG7 ARG8 ARG9 ARG10.
           DISPLAY 'CICS_0E08_HCIPDB01 CHECK VALUES...'
           MOVE 4 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'0000' TO AZ-OPT-COMMASK-DATA2(1).
      * EXEC CICS RETURN X'0000'
           IF ARG0-1 = X'0E08'
             MOVE X'0000' TO AZ-OPT-MASK-DATA2
             MOVE 2 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA2
               AZ-OPT-COMMASK-DATA2(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-OPT-RC = 0 THEN
               MOVE 3 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'EXEC CICS RETURN X''0000'''
                ' L=' AZ-LINE-NUM
               MOVE 2 TO AZ-GRP-INDEX
               MOVE 0 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-OT(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN 'TEST1'
                   PERFORM O0E080-TEST1
                   CONTINUE
                 WHEN 'SQL922'
                   PERFORM O0E080-SQL922
                   CONTINUE
                 WHEN 'TEST4'
                   PERFORM O0E080-TEST4
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
      * SET INPUT VALUE
      * CICS_OUTP_0E08_HCIPDB01.
           ENTRY 'CICS_OUTP_0E08_HCIPDB01' USING AZ-TEST
           AZ-INFO-BLOCK AZ-DFHEIBLK AZ-DFHCOMMAREA ARG0 ARG1 ARG2
           ARG3 ARG4 ARG5 ARG6 ARG7 ARG8 ARG9 ARG10.
           DISPLAY 'CICS_0E08_HCIPDB01 INPUT VALUES...'
           MOVE 0 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'0000' TO AZ-OPT-COMMASK-DATA2(1).
      * EXEC CICS RETURN X'0000'
           IF ARG0-1 = X'0E08'
             MOVE X'0000' TO AZ-OPT-MASK-DATA2
             MOVE 2 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA2
               AZ-OPT-COMMASK-DATA2(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-OPT-RC = 0 THEN
               MOVE 3 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'EXEC CICS RETURN X''0000'''
                ' L=' AZ-LINE-NUM
               MOVE 2 TO AZ-GRP-INDEX
               MOVE 1 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-IN(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN 'TEST1'
                   CONTINUE
                 WHEN 'SQL922'
                   CONTINUE
                 WHEN 'TEST4'
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
       O0E080-TEST1.
           MOVE 0 TO RETURN-CODE
           IF AZ-RECORD-COUNT-OT(1) = 0 THEN
             CONTINUE
           ELSE
             CONTINUE
           END-IF.
       O0E080-SQL922.
           MOVE 0 TO RETURN-CODE
           IF AZ-RECORD-COUNT-OT(1) = 0 THEN
             CONTINUE
           ELSE
             CONTINUE
           END-IF.
       O0E080-TEST4.
           MOVE 0 TO RETURN-CODE
           IF AZ-RECORD-COUNT-OT(1) = 0 THEN
             CONTINUE
           ELSE
             CONTINUE
           END-IF.
       GETLINENUM.
           MOVE 1 TO AZ-LINE-J
           PERFORM VARYING AZ-LINE-I FROM AZ-LINE-BYTE BY 1
             UNTIL AZ-LINE-I > AZ-LINE-BYTE + 5
             MOVE ARG0-3(AZ-LINE-I) TO AZ-LINE-NUM-RD(AZ-LINE-J)
             ADD 1 TO AZ-LINE-J
           END-PERFORM
           EXIT.
       TEARDOWN.
           DISPLAY 'CICS_0E08_HCIPDB01 SUCCESSFUL.'
           GOBACK.
       END PROGRAM 'CICS_0E08_HCIPDB01'.
      *+---------------------------------------------------------------+
      *| PROGRAM FOR EXEC SQL SELECT_INTO                              |
      *|    FUNCTION CODE: 00E7                                        |
      *|                                                               |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'DB2_00E7_HCIPDB01'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM DB2 CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 AZ-TEST-LEN        PIC S9(8) COMP.
       01 AZ-RECORD.
         03 AZ-RECORD-COUNT-OT OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
         03 AZ-RECORD-COUNT-IN OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
         03 AZ-OUT-PARM-NUM  PIC 9(8).
         03 AZ-IN-PARM-NUM   PIC 9(8).
         03 AZ-STMT-NUM      PIC 9(9).
       01 AZ-GRP-INDEX       PIC 9(8).
       01 AZ-FLAG-IN         PIC 9(1).
       01 AZ-RECORD-PTR      POINTER.
       01 AZ-RC-WORK         PIC S9(4) USAGE BINARY.
       LOCAL-STORAGE SECTION.
       01 AZ-HOSTVAR-PTR     POINTER.
       01 AZ-HOSTVAR-PTR-ADDR
           REDEFINES AZ-HOSTVAR-PTR PIC 9(9) COMP-5.
       LINKAGE SECTION.
       01 AZ-TEST            PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       01 AZ-APLIST.
          COPY BZUDB2CP.
       01 AZ-WK-RECORD-COUNT PIC 9(5) COMP-5.
       01 ARGO1.
          COPY BZUDB2CV.
       01 ARGI1          .
          COPY BZUDB2CV.
       01 ARGI2          .
          COPY BZUDB2CV.
       01 ARGI3          .
          COPY BZUDB2CV.
       01 ARGI4          .
          COPY BZUDB2CV.
       01 ARGI5          .
          COPY BZUDB2CV.
       01 ARGI6          .
          COPY BZUDB2CV.
       01 ARGI7          .
          COPY BZUDB2CV.
       01 ARGI8          .
          COPY BZUDB2CV.
       01 ARGI9          .
          COPY BZUDB2CV.
       01 ARGI10         .
          COPY BZUDB2CV.
       1 AZU00000000.
      *    *** DB2-PATIENT-ID : ZUT00000027
         3 ZUT00000027 PIC S9(9) COMP.
       1 AZU00000001.
      *    *** CA-FIRST-NAME : ZUT00000066
         5 ZUT00000066 PIC X(10).
       1 AZU00000002.
      *    *** CA-LAST-NAME : ZUT00000067
         5 ZUT00000067 PIC X(20).
       1 AZU00000003.
      *    *** CA-DOB : ZUT00000068
         5 ZUT00000068 PIC X(10).
       1 AZU00000004.
      *    *** CA-INS-CARD-NUM : ZUT00000065
         5 ZUT00000065 PIC X(10).
       1 AZU00000005.
      *    *** CA-ADDRESS : ZUT00000069
         5 ZUT00000069 PIC X(20).
       1 AZU00000006.
      *    *** CA-CITY : ZUT0000006A
         5 ZUT0000006A PIC X(20).
       1 AZU00000007.
      *    *** CA-POSTCODE : ZUT0000006B
         5 ZUT0000006B PIC X(10).
       1 AZU00000008.
      *    *** CA-PHONE-MOBILE : ZUT0000006C
         5 ZUT0000006C PIC X(20).
       1 AZU00000009.
      *    *** CA-EMAIL-ADDRESS : ZUT0000006D
         5 ZUT0000006D PIC X(50).
       1 AZU0000000A.
      *    *** CA-USERID : ZUT0000006E
         5 ZUT0000006E PIC X(10).
      *  *** SQLCA : ZUT00000028
       1 ZUT00000028.
      *    *** SQLCAID : ZUT00000029
         5 ZUT00000029 PIC X(8).
      *    *** SQLCABC : ZUT0000002A
         5 ZUT0000002A PIC S9(9) COMP.
      *    *** SQLCODE : ZUT0000002B
         5 ZUT0000002B PIC S9(9) COMP.
      *    *** SQLERRM : ZUT0000002C
         5 ZUT0000002C.
      *    *** SQLERRML : ZUT0000002D
         49 ZUT0000002D PIC S9(4) COMP.
      *    *** SQLERRMC : ZUT0000002E
         49 ZUT0000002E PIC X(70).
      *    *** SQLERRP : ZUT0000002F
         5 ZUT0000002F PIC X(8).
      *    *** SQLERRD : ZUT00000030
         5 ZUT00000030 OCCURS 6 TIMES PIC S9(9) COMP.
      *    *** SQLWARN : ZUT00000031
         5 ZUT00000031.
      *    *** SQLWARN0 : ZUT00000032
         10 ZUT00000032 PIC X(1).
      *    *** SQLWARN1 : ZUT00000033
         10 ZUT00000033 PIC X(1).
      *    *** SQLWARN2 : ZUT00000034
         10 ZUT00000034 PIC X(1).
      *    *** SQLWARN3 : ZUT00000035
         10 ZUT00000035 PIC X(1).
      *    *** SQLWARN4 : ZUT00000036
         10 ZUT00000036 PIC X(1).
      *    *** SQLWARN5 : ZUT00000037
         10 ZUT00000037 PIC X(1).
      *    *** SQLWARN6 : ZUT00000038
         10 ZUT00000038 PIC X(1).
      *    *** SQLWARN7 : ZUT00000039
         10 ZUT00000039 PIC X(1).
      *    *** SQLEXT : ZUT0000003A
         5 ZUT0000003A.
      *    *** SQLWARN8 : ZUT0000003B
         10 ZUT0000003B PIC X(1).
      *    *** SQLWARN9 : ZUT0000003C
         10 ZUT0000003C PIC X(1).
      *    *** SQLWARNA : ZUT0000003D
         10 ZUT0000003D PIC X(1).
      *    *** SQLSTATE : ZUT0000003E
         10 ZUT0000003E PIC X(5).
       01 AZ-SQLDA.
          COPY BZUDB2CA.
       PROCEDURE DIVISION.
      * CHECK OUTPUT VALUE
      * DB2_INPT_00E7_HCIPDB01.
           ENTRY 'DB2_INPT_00E7_HCIPDB01' USING AZ-TEST
           AZ-INFO-BLOCK AZ-APLIST ARGO1.
           DISPLAY 'DB2_00E7_HCIPDB01 CHECK VALUES...'
           MOVE 4 TO RETURN-CODE.
           MOVE SQL-STMT-NUM OF AZ-APLIST TO AZ-STMT-NUM
           SET ADDRESS OF AZ-SQLDA TO SQL-VPARMPTR
           MOVE SQLDA-NUM OF AZ-SQLDA TO AZ-OUT-PARM-NUM
           SET ADDRESS OF AZ-SQLDA TO SQL-APARMPTR
           MOVE SQLDA-NUM OF AZ-SQLDA TO AZ-IN-PARM-NUM
           SET ADDRESS OF ZUT00000028 TO SQL-CODEPTR OF AZ-APLIST
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * EXEC SQL SELECT_INTO : OUT=1 IN=10
           IF AZ-OUT-PARM-NUM = 1 AND
              AZ-IN-PARM-NUM = 10 THEN
             DISPLAY 'EXEC SQL SELECT_INTO'
              ' : OUT=' 1 ' IN=' 10
              ' L=' AZ-STMT-NUM
             MOVE SQL-AVAR-ADDR OF ARGO1 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU00000000
             TO AZ-HOSTVAR-PTR
             MOVE 6 TO AZ-GRP-INDEX
             MOVE 0 TO AZ-FLAG-IN
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
               AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
             SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
             MOVE AZ-RC-WORK TO RETURN-CODE
             ADD 1 TO AZ-WK-RECORD-COUNT
             MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-OT(1)
             EVALUATE AZ-TEST(1:AZ-TEST-LEN)
               WHEN SPACE
                 CONTINUE
               WHEN 'SQL922'
                 CONTINUE
               WHEN OTHER
                 CONTINUE
             END-EVALUATE
           END-IF.
           PERFORM TEARDOWN.
      * SET INPUT VALUE
      * DB2_OUTP_00E7_HCIPDB01.
           ENTRY 'DB2_OUTP_00E7_HCIPDB01' USING AZ-TEST
           AZ-INFO-BLOCK AZ-APLIST ARGI1 ARGI2 ARGI3 ARGI4 ARGI5 ARGI6
           ARGI7 ARGI8 ARGI9 ARGI10.
           DISPLAY 'DB2_00E7_HCIPDB01 INPUT VALUES...'
           MOVE 0 TO RETURN-CODE.
           MOVE SQL-STMT-NUM OF AZ-APLIST TO AZ-STMT-NUM
           SET ADDRESS OF AZ-SQLDA TO SQL-VPARMPTR
           MOVE SQLDA-NUM OF AZ-SQLDA TO AZ-OUT-PARM-NUM
           SET ADDRESS OF AZ-SQLDA TO SQL-APARMPTR
           MOVE SQLDA-NUM OF AZ-SQLDA TO AZ-IN-PARM-NUM
           SET ADDRESS OF ZUT00000028 TO SQL-CODEPTR OF AZ-APLIST
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * EXEC SQL SELECT_INTO : OUT=1 IN=10
           IF AZ-OUT-PARM-NUM = 1 AND
              AZ-IN-PARM-NUM = 10 THEN
             DISPLAY 'EXEC SQL SELECT_INTO'
              ' : OUT=' 1 ' IN=' 10
              ' L=' AZ-STMT-NUM
             MOVE SQL-AVAR-ADDR OF ARGI1 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU00000001
             TO AZ-HOSTVAR-PTR
             MOVE SQL-AVAR-ADDR OF ARGI2 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU00000002
             TO AZ-HOSTVAR-PTR
             MOVE SQL-AVAR-ADDR OF ARGI3 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU00000003
             TO AZ-HOSTVAR-PTR
             MOVE SQL-AVAR-ADDR OF ARGI4 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU00000004
             TO AZ-HOSTVAR-PTR
             MOVE SQL-AVAR-ADDR OF ARGI5 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU00000005
             TO AZ-HOSTVAR-PTR
             MOVE SQL-AVAR-ADDR OF ARGI6 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU00000006
             TO AZ-HOSTVAR-PTR
             MOVE SQL-AVAR-ADDR OF ARGI7 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU00000007
             TO AZ-HOSTVAR-PTR
             MOVE SQL-AVAR-ADDR OF ARGI8 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU00000008
             TO AZ-HOSTVAR-PTR
             MOVE SQL-AVAR-ADDR OF ARGI9 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU00000009
             TO AZ-HOSTVAR-PTR
             MOVE SQL-AVAR-ADDR OF ARGI10 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU0000000A
             TO AZ-HOSTVAR-PTR
             MOVE 6 TO AZ-GRP-INDEX
             MOVE 1 TO AZ-FLAG-IN
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
               AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
             SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
             MOVE AZ-RC-WORK TO RETURN-CODE
             ADD 1 TO AZ-WK-RECORD-COUNT
             MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-IN(1)
             EVALUATE AZ-TEST(1:AZ-TEST-LEN)
               WHEN SPACE
                 CONTINUE
               WHEN 'SQL922'
                 PERFORM I00E70-SQL922
                 CONTINUE
               WHEN OTHER
                 CONTINUE
             END-EVALUATE
           END-IF.
           PERFORM TEARDOWN.
       I00E70-SQL922.
           IF AZ-RECORD-COUNT-IN(1) = 0 THEN
             CONTINUE
           ELSE IF AZ-RECORD-COUNT-IN(1) = 1
           MOVE -922 TO ZUT0000002B OF ZUT00000028
           ELSE
             CONTINUE
           END-IF
           END-IF.
       TEARDOWN.
           DISPLAY 'DB2_00E7_HCIPDB01 SUCCESSFUL.'
           GOBACK.
       END PROGRAM 'DB2_00E7_HCIPDB01'.
